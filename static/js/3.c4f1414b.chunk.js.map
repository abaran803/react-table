{"version":3,"sources":["../node_modules/react-table/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../src/publicUtils.js","../../src/utils.js","../../src/makeDefaultPluginHooks.js","../../src/hooks/useColumnVisibility.js","../../src/hooks/useTable.js","../../src/plugin-hooks/useExpanded.js","../../src/filterTypes.js","../../src/plugin-hooks/useFilters.js","../../src/plugin-hooks/useGlobalFilter.js","../../src/aggregations.js","../../src/plugin-hooks/useGroupBy.js","../../src/sortTypes.js","../../src/plugin-hooks/useSortBy.js","../../src/plugin-hooks/usePagination.js","../../src/plugin-hooks/_UNSTABLE_usePivotColumns.js","../../src/plugin-hooks/useRowSelect.js","../../src/plugin-hooks/useRowState.js","../../src/plugin-hooks/useColumnOrder.js","../../src/plugin-hooks/useResizeColumns.js","../../src/plugin-hooks/useAbsoluteLayout.js","../../src/plugin-hooks/useBlockLayout.js","../../src/plugin-hooks/useFlexLayout.js","../../src/plugin-hooks/useGridLayout.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"names":["module","exports","require","_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","actions","init","defaultRenderer","emptyRenderer","React","defaultColumn","Cell","width","minWidth","maxWidth","Number","MAX_SAFE_INTEGER","mergeProps","propList","reduce","props","style","className","makePropGetter","hooks","meta","userProps","prev","handlePropGetter","prevProps","reduceHooks","initial","allowUndefined","loopHooks","context","forEach","hook","ensurePluginOrder","plugins","befores","pluginName","afters","findIndex","plugin","before","functionalUpdate","updater","old","useGetLatest","obj","ref","useRef","current","useCallback","safeUseLayoutEffect","document","useLayoutEffect","useEffect","useMountedLayoutEffect","fn","deps","mountedRef","makeRenderer","instance","column","type","Comp","console","info","Error","flexRender","component","proto","getPrototypeOf","isReactComponent","$$typeof","includes","description","linkColumnStructure","columns","parent","depth","map","assignColumnAccessor","flattenColumns","flattenBy","id","accessor","Header","accessorPath","split","path","def","val","cacheKey","JSON","stringify","pathObj","pathObjCache","get","flattenDeep","newArr","String","d","replace","join","reOpenBracket","reCloseBracket","set","cursor","pathPart","e","row","error","assign","decorateColumn","userDefaultColumn","Footer","originalWidth","makeHeaderGroups","allColumns","additionalHeaderProperties","headerGroups","scanColumns","uid","getUID","headerGroup","headers","parentColumns","hasParents","some","newParent","latestParentColumn","reverse","originalId","placeholderOf","Map","getFirstDefined","args","isFunction","a","key","flat","recurse","expandRows","rows","manualExpandedKey","expanded","expandSubRows","expandedRows","handleRow","addToExpandedRows","isExpanded","original","canExpand","subRows","getFilterMethod","filter","userFilterTypes","filterTypes","text","shouldAutoRemoveFilter","autoRemove","unpreparedAccessWarning","passiveSupported","defaultGetTableProps","role","defaultGetTableBodyProps","defaultGetHeaderProps","colSpan","totalVisibleHeaderCount","defaultGetFooterProps","defaultGetHeaderGroupProps","index","defaultGetFooterGroupProps","defaultGetRowProps","defaultGetCellProps","cell","makeDefaultPluginHooks","useOptions","stateReducers","useControlledState","columnsDeps","allColumnsDeps","accessValue","materializedColumns","materializedColumnsDeps","useInstanceAfterData","visibleColumns","visibleColumnsDeps","headerGroupsDeps","useInstanceBeforeDimensions","useInstance","prepareRow","getTableProps","getTableBodyProps","getHeaderGroupProps","getFooterGroupProps","getHeaderProps","getFooterProps","getRowProps","getCellProps","useFinalInstance","resetHiddenColumns","toggleHideColumn","setHiddenColumns","toggleHideAllColumns","useColumnVisibility","getToggleHiddenProps","defaultGetToggleHiddenProps","getToggleHideAllColumnsProps","defaultGetToggleHideAllColumnsProps","reducer","state","hiddenColumns","onChange","toggleHidden","target","checked","isVisible","title","allColumnsHidden","indeterminate","action","previousState","initialState","columnId","handleColumn","parentVisible","subColumn","subHeader","flatHeaders","dispatch","getHooks","autoResetHiddenColumns","getInstance","getAutoResetHiddenColumns","defaultInitialState","defaultColumnInstance","defaultReducer","prevState","defaultGetSubRows","defaultGetRowId","defaultUseControlledState","applyDefaults","getSubRows","getRowId","stateReducer","calculateHeaderWidths","left","sumTotalMinWidth","sumTotalWidth","sumTotalMaxWidth","sumTotalFlexWidth","subHeaders","header","totalLeft","totalMinWidth","totalWidth","totalMaxWidth","totalFlexWidth","Math","min","max","canResize","accessRowsForColumn","data","flatRows","rowsById","accessValueHooks","originalRow","rowIndex","accessRow","parentRows","originalSubRows","cells","values","resetExpanded","toggleRowExpanded","toggleAllRowsExpanded","useExpanded","getToggleAllRowsExpandedProps","defaultGetToggleAllRowsExpandedProps","getToggleRowExpandedProps","defaultGetToggleRowExpandedProps","onClick","isAllRowsExpanded","keys","rowId","setExpanded","exists","shouldExist","paginateExpandedRows","autoResetExpanded","getAutoResetExpanded","Boolean","useMemo","expandedDepth","maxDepth","splitId","preExpandedRows","ids","filterValue","rowValue","toLowerCase","exactText","exactTextCase","includesAll","every","includesSome","includesValue","exact","equals","between","Infinity","temp","resetFilters","setFilter","setAllFilters","useFilters","filters","find","filterMethod","previousfilter","newFilter","manualFilters","defaultCanFilter","disableFilters","autoResetFilters","columnDefaultCanFilter","columnDisableFilters","canFilter","found","filteredFlatRows","filteredRowsById","filterRows","filteredRows","filteredSoFar","preFilteredRows","warn","getAutoResetFilters","preFilteredFlatRows","preFilteredRowsById","resetGlobalFilter","setGlobalFilter","useGlobalFilter","globalFilter","manualGlobalFilter","globalFilterValue","autoResetGlobalFilter","disableGlobalFilter","columnDisableGlobalFilter","filterableColumns","c","globalFilteredRows","globalFilteredFlatRows","globalFilteredRowsById","getAutoResetGlobalFilter","preGlobalFilteredRows","preGlobalFilteredFlatRows","preGlobalFilteredRowsById","sum","aggregatedValues","mid","floor","nums","sort","b","Set","size","emptyArray","emptyObject","resetGroupBy","setGroupBy","toggleGroupBy","useGroupBy","getGroupByToggleProps","defaultGetGroupByToggleProps","groupBy","canGroupBy","persist","resolvedGroupBy","groupByColumns","col","g","nonGroupByColumns","isGrouped","groupedIndex","indexOf","defaultUserAggregations","groupByFn","defaultGroupByFn","manualGroupBy","aggregations","userAggregations","autoResetGroupBy","disableGroupBy","defaultCanGroupBy","defaultColumnGroupBy","defaultGroupBy","columnDisableGroupBy","Aggregated","existingGroupBy","groupedFlatRows","groupedRowsById","onlyGroupedFlatRows","onlyGroupedRowsById","nonGroupedFlatRows","nonGroupedRowsById","groupedRows","groupUpRecursively","parentId","rowGroupsMap","entries","groupByVal","leafRows","aggregateFn","aggregate","groupedValues","leafValues","columnValue","aggregateValue","aggregateValueFn","groupByID","subRow","getAutoResetGroupBy","preGroupedRows","preGroupedFlatRow","preGroupedRowsById","allCells","isPlaceholder","isAggregated","resKey","reSplitAlphaNumeric","compareBasic","getRowValuesByColumnID","row1","row2","isNaN","rowA","rowB","aa","shift","bb","an","parseInt","bn","combo","getTime","alower","blower","replaceNonNumeric","resetSortBy","setSortBy","toggleSortBy","clearSortBy","sortType","sortDescFirst","useSortBy","getSortByToggleProps","defaultGetSortByToggleProps","isMultiSortEvent","shiftKey","canSort","disableMultiSort","sortBy","sortAction","desc","multi","disableSortRemove","disableMultiRemove","maxMultiSortColCount","existingSortBy","existingIndex","hasDescDefined","newSortBy","splice","orderByFn","defaultOrderByFn","userSortTypes","sortTypes","manualSortBy","defaultCanSort","disableSortBy","autoResetSortBy","defaultColumnCanSort","columnDisableSortBy","columnSort","isSorted","sortedIndex","isSortedDesc","sortedFlatRows","availableSortBy","sortData","sortedData","sortMethod","sortInverted","sortedRows","getAutoResetSortBy","preSortedRows","preSortedFlatRows","funcs","dirs","sortFn","sortInt","resetPage","gotoPage","setPageSize","usePagination","pageSize","pageIndex","pageCount","page","newPageIndex","canNavigate","topRowIndex","autoResetPage","userPageCount","manualPagination","getAutoResetPage","ceil","pageOptions","fill","pageStart","pageEnd","canPreviousPage","canNextPage","previousPage","nextPage","resetPivot","togglePivot","_UNSTABLE_usePivotColumns","getPivotToggleProps","defaultGetPivotToggleProps","defaultPivotColumns","canPivot","pivotColumns","setPivot","resolvedPivot","isPivotSource","uniqueValues","add","materialized","sourceColumns","newMaterialized","buildPivotColumns","pivotFilters","pivotColumn","u","columnGroup","PivotHeader","uniqueValue","isPivotGroup","pivotValue","sourceColumn","isPivoted","autoResetPivot","manaulPivot","disablePivot","defaultCanPivot","defaultColumnPivot","defaultPivot","columnDisablePivot","getAutoResetPivot","resetSelectedRows","toggleAllRowsSelected","toggleRowSelected","toggleAllPageRowsSelected","useRowSelect","getToggleRowSelectedProps","defaultGetToggleRowSelectedProps","getToggleAllRowsSelectedProps","defaultGetToggleAllRowsSelectedProps","getToggleAllPageRowsSelectedProps","defaultGetToggleAllPageRowsSelectedProps","manualRowSelectedKey","isSelected","isSomeSelected","isAllRowsSelected","selectedRowIds","isAllPageRowsSelected","setSelected","selectAll","selectSubRows","newSelectedRowIds","handleRowById","autoResetSelectedRows","selectedFlatRows","getRowIsSelected","allChildrenSelected","someSelected","getAutoResetSelectedRows","defaultInitialRowStateAccessor","defaultInitialCellStateAccessor","setRowState","setCellState","resetRowState","useRowState","initialRowStateAccessor","initialCellStateAccessor","rowState","oldRowState","oldCellState","cellState","autoResetRowState","getAutoResetRowState","setState","resetColumnOrder","setColumnOrder","useColumnOrder","columnOrder","columnOrderCopy","columnsCopy","columnsInOrder","targetColumnId","foundIndex","columnStartResizing","columnResizing","columnDoneResizing","resetResize","useResizeColumns","getResizerProps","defaultGetResizerProps","position","onResizeStart","isTouchEvent","touches","headerIdWidths","leafHeaders","recurseHeader","clientX","round","dispatchMove","clientXPos","dispatchEnd","handlersAndEvents","mouse","moveEvent","moveHandler","upEvent","upHandler","removeEventListener","touch","cancelable","preventDefault","stopPropagation","events","passiveIfSupported","supported","options","window","addEventListener","passive","columnWidth","onMouseDown","onTouchStart","draggable","columnWidths","startX","isResizingColumn","percentageDeltaX","newColumnWidths","headerId","headerWidth","disableResizing","isResizing","autoResetResize","getAutoResetResize","resetResizing","cellStyles","top","useAbsoluteLayout","getRowStyles","totalColumnsWidth","display","boxSizing","useBlockLayout","useFlexLayout","totalColumnsMinWidth","flex","useGridLayout","gridTemplateColumns","gridLayout","w","columnIndex","elWidth","getElementById","offsetWidth","startingWidth","newWidth","columnWidthsCopy","defaultFn","defaultWait","debounceRef","getDefaultFn","getDefaultWait","promise","Promise","resolve","reject","timeout","clearTimeout","setTimeout","userColumns","getStateReducer","s","handler","useReducer","reducerState","allColumnsQueue","initialRows","all","visibleColumnsDep","totalColumnsMaxWidth","render","footerGroups","runtime","Op","hasOwn","hasOwnProperty","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","Context","_invoke","GenStateSuspendedStart","method","arg","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","result","__await","then","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","object","pop","skipTempReset","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","Function","_defineProperty","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","apply","_objectSpread2","arguments","source","getOwnPropertyDescriptors","defineProperties"],"mappings":"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","file":"static/js/3.c4f1414b.chunk.js","sourcesContent":["if (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/react-table.production.min.js')\n} else {\n  module.exports = require('./dist/react-table.development.js')\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react'\n\nlet renderErr = 'Renderer Error ☝️'\n\nexport const actions = {\n  init: 'init',\n}\n\nexport const defaultRenderer = ({ value = '' }) => value;\nexport const emptyRenderer = () => <>&nbsp;</>;\n\nexport const defaultColumn = {\n  Cell: defaultRenderer,\n  width: 150,\n  minWidth: 0,\n  maxWidth: Number.MAX_SAFE_INTEGER,\n}\n\nfunction mergeProps(...propList) {\n  return propList.reduce((props, next) => {\n    const { style, className, ...rest } = next\n\n    props = {\n      ...props,\n      ...rest,\n    }\n\n    if (style) {\n      props.style = props.style\n        ? { ...(props.style || {}), ...(style || {}) }\n        : style\n    }\n\n    if (className) {\n      props.className = props.className\n        ? props.className + ' ' + className\n        : className\n    }\n\n    if (props.className === '') {\n      delete props.className\n    }\n\n    return props\n  }, {})\n}\n\nfunction handlePropGetter(prevProps, userProps, meta) {\n  // Handle a lambda, pass it the previous props\n  if (typeof userProps === 'function') {\n    return handlePropGetter({}, userProps(prevProps, meta))\n  }\n\n  // Handle an array, merge each item as separate props\n  if (Array.isArray(userProps)) {\n    return mergeProps(prevProps, ...userProps)\n  }\n\n  // Handle an object by default, merge the two objects\n  return mergeProps(prevProps, userProps)\n}\n\nexport const makePropGetter = (hooks, meta = {}) => {\n  return (userProps = {}) =>\n    [...hooks, userProps].reduce(\n      (prev, next) =>\n        handlePropGetter(prev, next, {\n          ...meta,\n          userProps,\n        }),\n      {}\n    )\n}\n\nexport const reduceHooks = (hooks, initial, meta = {}, allowUndefined) =>\n  hooks.reduce((prev, next) => {\n    const nextValue = next(prev, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (!allowUndefined && typeof nextValue === 'undefined') {\n        console.info(next)\n        throw new Error(\n          'React Table: A reducer hook ☝️ just returned undefined! This is not allowed.'\n        )\n      }\n    }\n    return nextValue\n  }, initial)\n\nexport const loopHooks = (hooks, context, meta = {}) =>\n  hooks.forEach(hook => {\n    const nextValue = hook(context, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof nextValue !== 'undefined') {\n        console.info(hook, nextValue)\n        throw new Error(\n          'React Table: A loop-type hook ☝️ just returned a value! This is not allowed.'\n        )\n      }\n    }\n  })\n\nexport function ensurePluginOrder(plugins, befores, pluginName, afters) {\n  if (process.env.NODE_ENV !== 'production' && afters) {\n    throw new Error(\n      `Defining plugins in the \"after\" section of ensurePluginOrder is no longer supported (see plugin ${pluginName})`\n    )\n  }\n  const pluginIndex = plugins.findIndex(\n    plugin => plugin.pluginName === pluginName\n  )\n\n  if (pluginIndex === -1) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`The plugin \"${pluginName}\" was not found in the plugin list!\nThis usually means you need to need to name your plugin hook by setting the 'pluginName' property of the hook function, eg:\n\n  ${pluginName}.pluginName = '${pluginName}'\n`)\n    }\n  }\n\n  befores.forEach(before => {\n    const beforeIndex = plugins.findIndex(\n      plugin => plugin.pluginName === before\n    )\n    if (beforeIndex > -1 && beforeIndex > pluginIndex) {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error(\n          `React Table: The ${pluginName} plugin hook must be placed after the ${before} plugin hook!`\n        )\n      }\n    }\n  })\n}\n\nexport function functionalUpdate(updater, old) {\n  return typeof updater === 'function' ? updater(old) : updater\n}\n\nexport function useGetLatest(obj) {\n  const ref = React.useRef()\n  ref.current = obj\n\n  return React.useCallback(() => ref.current, [])\n}\n\n// SSR has issues with useLayoutEffect still, so use useEffect during SSR\nexport const safeUseLayoutEffect =\n  typeof document !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\nexport function useMountedLayoutEffect(fn, deps) {\n  const mountedRef = React.useRef(false)\n\n  safeUseLayoutEffect(() => {\n    if (mountedRef.current) {\n      fn()\n    }\n    mountedRef.current = true\n    // eslint-disable-next-line\n  }, deps)\n}\n\nexport function useAsyncDebounce(defaultFn, defaultWait = 0) {\n  const debounceRef = React.useRef({})\n\n  const getDefaultFn = useGetLatest(defaultFn)\n  const getDefaultWait = useGetLatest(defaultWait)\n\n  return React.useCallback(\n    async (...args) => {\n      if (!debounceRef.current.promise) {\n        debounceRef.current.promise = new Promise((resolve, reject) => {\n          debounceRef.current.resolve = resolve\n          debounceRef.current.reject = reject\n        })\n      }\n\n      if (debounceRef.current.timeout) {\n        clearTimeout(debounceRef.current.timeout)\n      }\n\n      debounceRef.current.timeout = setTimeout(async () => {\n        delete debounceRef.current.timeout\n        try {\n          debounceRef.current.resolve(await getDefaultFn()(...args))\n        } catch (err) {\n          debounceRef.current.reject(err)\n        } finally {\n          delete debounceRef.current.promise\n        }\n      }, getDefaultWait())\n\n      return debounceRef.current.promise\n    },\n    [getDefaultFn, getDefaultWait]\n  )\n}\n\nexport function makeRenderer(instance, column, meta = {}) {\n  return (type, userProps = {}) => {\n    const Comp = typeof type === 'string' ? column[type] : type\n\n    if (typeof Comp === 'undefined') {\n      console.info(column)\n      throw new Error(renderErr)\n    }\n\n    return flexRender(Comp, { ...instance, column, ...meta, ...userProps })\n  }\n}\n\nexport function flexRender(Comp, props) {\n  return isReactComponent(Comp) ? <Comp {...props} /> : Comp\n}\n\nfunction isReactComponent(component) {\n  return (\n    isClassComponent(component) ||\n    typeof component === 'function' ||\n    isExoticComponent(component)\n  )\n}\n\nfunction isClassComponent(component) {\n  return (\n    typeof component === 'function' &&\n    (() => {\n      const proto = Object.getPrototypeOf(component)\n      return proto.prototype && proto.prototype.isReactComponent\n    })()\n  )\n}\n\nfunction isExoticComponent(component) {\n  return (\n    typeof component === 'object' &&\n    typeof component.$$typeof === 'symbol' &&\n    ['react.memo', 'react.forward_ref'].includes(component.$$typeof.description)\n  )\n}\n","import { defaultColumn, emptyRenderer } from './publicUtils'\n\n// Find the depth of the columns\nexport function findMaxDepth(columns, depth = 0) {\n  return columns.reduce((prev, curr) => {\n    if (curr.columns) {\n      return Math.max(prev, findMaxDepth(curr.columns, depth + 1))\n    }\n    return depth\n  }, 0)\n}\n\n// Build the visible columns, headers and flat column list\nexport function linkColumnStructure(columns, parent, depth = 0) {\n  return columns.map(column => {\n    column = {\n      ...column,\n      parent,\n      depth,\n    }\n\n    assignColumnAccessor(column)\n\n    if (column.columns) {\n      column.columns = linkColumnStructure(column.columns, column, depth + 1)\n    }\n    return column\n  })\n}\n\nexport function flattenColumns(columns) {\n  return flattenBy(columns, 'columns')\n}\n\nexport function assignColumnAccessor(column) {\n  // First check for string accessor\n  let { id, accessor, Header } = column\n\n  if (typeof accessor === 'string') {\n    id = id || accessor\n    const accessorPath = accessor.split('.')\n    accessor = row => getBy(row, accessorPath)\n  }\n\n  if (!id && typeof Header === 'string' && Header) {\n    id = Header\n  }\n\n  if (!id && column.columns) {\n    console.error(column)\n    throw new Error('A column ID (or unique \"Header\" value) is required!')\n  }\n\n  if (!id) {\n    console.error(column)\n    throw new Error('A column ID (or string accessor) is required!')\n  }\n\n  Object.assign(column, {\n    id,\n    accessor,\n  })\n\n  return column\n}\n\nexport function decorateColumn(column, userDefaultColumn) {\n  if (!userDefaultColumn) {\n    throw new Error()\n  }\n  Object.assign(column, {\n    // Make sure there is a fallback header, just in case\n    Header: emptyRenderer,\n    Footer: emptyRenderer,\n    ...defaultColumn,\n    ...userDefaultColumn,\n    ...column,\n  })\n\n  Object.assign(column, {\n    originalWidth: column.width,\n  })\n\n  return column\n}\n\n// Build the header groups from the bottom up\nexport function makeHeaderGroups(\n  allColumns,\n  defaultColumn,\n  additionalHeaderProperties = () => ({})\n) {\n  const headerGroups = []\n\n  let scanColumns = allColumns\n\n  let uid = 0\n  const getUID = () => uid++\n\n  while (scanColumns.length) {\n    // The header group we are creating\n    const headerGroup = {\n      headers: [],\n    }\n\n    // The parent columns we're going to scan next\n    const parentColumns = []\n\n    const hasParents = scanColumns.some(d => d.parent)\n\n    // Scan each column for parents\n    scanColumns.forEach(column => {\n      // What is the latest (last) parent column?\n      let latestParentColumn = [...parentColumns].reverse()[0]\n\n      let newParent\n\n      if (hasParents) {\n        // If the column has a parent, add it if necessary\n        if (column.parent) {\n          newParent = {\n            ...column.parent,\n            originalId: column.parent.id,\n            id: `${column.parent.id}_${getUID()}`,\n            headers: [column],\n            ...additionalHeaderProperties(column),\n          }\n        } else {\n          // If other columns have parents, we'll need to add a place holder if necessary\n          const originalId = `${column.id}_placeholder`\n          newParent = decorateColumn(\n            {\n              originalId,\n              id: `${column.id}_placeholder_${getUID()}`,\n              placeholderOf: column,\n              headers: [column],\n              ...additionalHeaderProperties(column),\n            },\n            defaultColumn\n          )\n        }\n\n        // If the resulting parent columns are the same, just add\n        // the column and increment the header span\n        if (\n          latestParentColumn &&\n          latestParentColumn.originalId === newParent.originalId\n        ) {\n          latestParentColumn.headers.push(column)\n        } else {\n          parentColumns.push(newParent)\n        }\n      }\n\n      headerGroup.headers.push(column)\n    })\n\n    headerGroups.push(headerGroup)\n\n    // Start scanning the parent columns\n    scanColumns = parentColumns\n  }\n\n  return headerGroups.reverse()\n}\n\nconst pathObjCache = new Map()\n\nexport function getBy(obj, path, def) {\n  if (!path) {\n    return obj\n  }\n  const cacheKey = typeof path === 'function' ? path : JSON.stringify(path)\n\n  const pathObj =\n    pathObjCache.get(cacheKey) ||\n    (() => {\n      const pathObj = makePathArray(path)\n      pathObjCache.set(cacheKey, pathObj)\n      return pathObj\n    })()\n\n  let val\n\n  try {\n    val = pathObj.reduce((cursor, pathPart) => cursor[pathPart], obj)\n  } catch (e) {\n    // continue regardless of error\n  }\n  return typeof val !== 'undefined' ? val : def\n}\n\nexport function getFirstDefined(...args) {\n  for (let i = 0; i < args.length; i += 1) {\n    if (typeof args[i] !== 'undefined') {\n      return args[i]\n    }\n  }\n}\n\nexport function getElementDimensions(element) {\n  const rect = element.getBoundingClientRect()\n  const style = window.getComputedStyle(element)\n  const margins = {\n    left: parseInt(style.marginLeft),\n    right: parseInt(style.marginRight),\n  }\n  const padding = {\n    left: parseInt(style.paddingLeft),\n    right: parseInt(style.paddingRight),\n  }\n  return {\n    left: Math.ceil(rect.left),\n    width: Math.ceil(rect.width),\n    outerWidth: Math.ceil(\n      rect.width + margins.left + margins.right + padding.left + padding.right\n    ),\n    marginLeft: margins.left,\n    marginRight: margins.right,\n    paddingLeft: padding.left,\n    paddingRight: padding.right,\n    scrollWidth: element.scrollWidth,\n  }\n}\n\nexport function isFunction(a) {\n  if (typeof a === 'function') {\n    return a\n  }\n}\n\nexport function flattenBy(arr, key) {\n  const flat = []\n\n  const recurse = arr => {\n    arr.forEach(d => {\n      if (!d[key]) {\n        flat.push(d)\n      } else {\n        recurse(d[key])\n      }\n    })\n  }\n\n  recurse(arr)\n\n  return flat\n}\n\nexport function expandRows(\n  rows,\n  { manualExpandedKey, expanded, expandSubRows = true }\n) {\n  const expandedRows = []\n\n  const handleRow = (row, addToExpandedRows = true) => {\n    row.isExpanded =\n      (row.original && row.original[manualExpandedKey]) || expanded[row.id]\n\n    row.canExpand = row.subRows && !!row.subRows.length\n\n    if (addToExpandedRows) {\n      expandedRows.push(row)\n    }\n\n    if (row.subRows && row.subRows.length && row.isExpanded) {\n      row.subRows.forEach(row => handleRow(row, expandSubRows))\n    }\n  }\n\n  rows.forEach(row => handleRow(row))\n\n  return expandedRows\n}\n\nexport function getFilterMethod(filter, userFilterTypes, filterTypes) {\n  return (\n    isFunction(filter) ||\n    userFilterTypes[filter] ||\n    filterTypes[filter] ||\n    filterTypes.text\n  )\n}\n\nexport function shouldAutoRemoveFilter(autoRemove, value, column) {\n  return autoRemove ? autoRemove(value, column) : typeof value === 'undefined'\n}\n\nexport function unpreparedAccessWarning() {\n  throw new Error(\n    'React-Table: You have not called prepareRow(row) one or more rows you are attempting to render.'\n  )\n}\n\nlet passiveSupported = null\nexport function passiveEventSupported() {\n  // memoize support to avoid adding multiple test events\n  if (typeof passiveSupported === 'boolean') return passiveSupported\n\n  let supported = false\n  try {\n    const options = {\n      get passive() {\n        supported = true\n        return false\n      },\n    }\n\n    window.addEventListener('test', null, options)\n    window.removeEventListener('test', null, options)\n  } catch (err) {\n    supported = false\n  }\n  passiveSupported = supported\n  return passiveSupported\n}\n\n//\n\nconst reOpenBracket = /\\[/g\nconst reCloseBracket = /\\]/g\n\nfunction makePathArray(obj) {\n  return (\n    flattenDeep(obj)\n      // remove all periods in parts\n      .map(d => String(d).replace('.', '_'))\n      // join parts using period\n      .join('.')\n      // replace brackets with periods\n      .replace(reOpenBracket, '.')\n      .replace(reCloseBracket, '')\n      // split it back out on periods\n      .split('.')\n  )\n}\n\nfunction flattenDeep(arr, newArr = []) {\n  if (!Array.isArray(arr)) {\n    newArr.push(arr)\n  } else {\n    for (let i = 0; i < arr.length; i += 1) {\n      flattenDeep(arr[i], newArr)\n    }\n  }\n  return newArr\n}\n","const defaultGetTableProps = props => ({\n  role: 'table',\n  ...props,\n})\n\nconst defaultGetTableBodyProps = props => ({\n  role: 'rowgroup',\n  ...props,\n})\n\nconst defaultGetHeaderProps = (props, { column }) => ({\n  key: `header_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  role: 'columnheader',\n  ...props,\n})\n\nconst defaultGetFooterProps = (props, { column }) => ({\n  key: `footer_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  ...props,\n})\n\nconst defaultGetHeaderGroupProps = (props, { index }) => ({\n  key: `headerGroup_${index}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetFooterGroupProps = (props, { index }) => ({\n  key: `footerGroup_${index}`,\n  ...props,\n})\n\nconst defaultGetRowProps = (props, { row }) => ({\n  key: `row_${row.id}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetCellProps = (props, { cell }) => ({\n  key: `cell_${cell.row.id}_${cell.column.id}`,\n  role: 'cell',\n  ...props,\n})\n\nexport default function makeDefaultPluginHooks() {\n  return {\n    useOptions: [],\n    stateReducers: [],\n    useControlledState: [],\n    columns: [],\n    columnsDeps: [],\n    allColumns: [],\n    allColumnsDeps: [],\n    accessValue: [],\n    materializedColumns: [],\n    materializedColumnsDeps: [],\n    useInstanceAfterData: [],\n    visibleColumns: [],\n    visibleColumnsDeps: [],\n    headerGroups: [],\n    headerGroupsDeps: [],\n    useInstanceBeforeDimensions: [],\n    useInstance: [],\n    prepareRow: [],\n    getTableProps: [defaultGetTableProps],\n    getTableBodyProps: [defaultGetTableBodyProps],\n    getHeaderGroupProps: [defaultGetHeaderGroupProps],\n    getFooterGroupProps: [defaultGetFooterGroupProps],\n    getHeaderProps: [defaultGetHeaderProps],\n    getFooterProps: [defaultGetFooterProps],\n    getRowProps: [defaultGetRowProps],\n    getCellProps: [defaultGetCellProps],\n    useFinalInstance: [],\n  }\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useGetLatest,\n  makePropGetter,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nactions.resetHiddenColumns = 'resetHiddenColumns'\nactions.toggleHideColumn = 'toggleHideColumn'\nactions.setHiddenColumns = 'setHiddenColumns'\nactions.toggleHideAllColumns = 'toggleHideAllColumns'\n\nexport const useColumnVisibility = hooks => {\n  hooks.getToggleHiddenProps = [defaultGetToggleHiddenProps]\n  hooks.getToggleHideAllColumnsProps = [defaultGetToggleHideAllColumnsProps]\n\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n  hooks.headerGroupsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.hiddenColumns,\n  ])\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnVisibility.pluginName = 'useColumnVisibility'\n\nconst defaultGetToggleHiddenProps = (props, { column }) => [\n  props,\n  {\n    onChange: e => {\n      column.toggleHidden(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: column.isVisible,\n    title: 'Toggle Column Visible',\n  },\n]\n\nconst defaultGetToggleHideAllColumnsProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleHideAllColumns(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: !instance.allColumnsHidden && !instance.state.hiddenColumns.length,\n    title: 'Toggle All Columns Hidden',\n    indeterminate:\n      !instance.allColumnsHidden && instance.state.hiddenColumns.length,\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      hiddenColumns: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: instance.initialState.hiddenColumns || [],\n    }\n  }\n\n  if (action.type === actions.toggleHideColumn) {\n    const should =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.includes(action.columnId)\n\n    const hiddenColumns = should\n      ? [...state.hiddenColumns, action.columnId]\n      : state.hiddenColumns.filter(d => d !== action.columnId)\n\n    return {\n      ...state,\n      hiddenColumns,\n    }\n  }\n\n  if (action.type === actions.setHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: functionalUpdate(action.value, state.hiddenColumns),\n    }\n  }\n\n  if (action.type === actions.toggleHideAllColumns) {\n    const shouldAll =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.length\n\n    return {\n      ...state,\n      hiddenColumns: shouldAll ? instance.allColumns.map(d => d.id) : [],\n    }\n  }\n}\n\nfunction useInstanceBeforeDimensions(instance) {\n  const {\n    headers,\n    state: { hiddenColumns },\n  } = instance\n\n  const isMountedRef = React.useRef(false)\n\n  if (!isMountedRef.current) {\n  }\n\n  const handleColumn = (column, parentVisible) => {\n    column.isVisible = parentVisible && !hiddenColumns.includes(column.id)\n\n    let totalVisibleHeaderCount = 0\n\n    if (column.headers && column.headers.length) {\n      column.headers.forEach(\n        subColumn =>\n          (totalVisibleHeaderCount += handleColumn(subColumn, column.isVisible))\n      )\n    } else {\n      totalVisibleHeaderCount = column.isVisible ? 1 : 0\n    }\n\n    column.totalVisibleHeaderCount = totalVisibleHeaderCount\n\n    return totalVisibleHeaderCount\n  }\n\n  let totalVisibleHeaderCount = 0\n\n  headers.forEach(\n    subHeader => (totalVisibleHeaderCount += handleColumn(subHeader, true))\n  )\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    flatHeaders,\n    dispatch,\n    allColumns,\n    getHooks,\n    state: { hiddenColumns },\n    autoResetHiddenColumns = true,\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  const allColumnsHidden = allColumns.length === hiddenColumns.length\n\n  const toggleHideColumn = React.useCallback(\n    (columnId, value) =>\n      dispatch({ type: actions.toggleHideColumn, columnId, value }),\n    [dispatch]\n  )\n\n  const setHiddenColumns = React.useCallback(\n    value => dispatch({ type: actions.setHiddenColumns, value }),\n    [dispatch]\n  )\n\n  const toggleHideAllColumns = React.useCallback(\n    value => dispatch({ type: actions.toggleHideAllColumns, value }),\n    [dispatch]\n  )\n\n  const getToggleHideAllColumnsProps = makePropGetter(\n    getHooks().getToggleHideAllColumnsProps,\n    { instance: getInstance() }\n  )\n\n  flatHeaders.forEach(column => {\n    column.toggleHidden = value => {\n      dispatch({\n        type: actions.toggleHideColumn,\n        columnId: column.id,\n        value,\n      })\n    }\n\n    column.getToggleHiddenProps = makePropGetter(\n      getHooks().getToggleHiddenProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n  })\n\n  const getAutoResetHiddenColumns = useGetLatest(autoResetHiddenColumns)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetHiddenColumns()) {\n      dispatch({ type: actions.resetHiddenColumns })\n    }\n  }, [dispatch, columns])\n\n  Object.assign(instance, {\n    allColumnsHidden,\n    toggleHideColumn,\n    setHiddenColumns,\n    toggleHideAllColumns,\n    getToggleHideAllColumnsProps,\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  linkColumnStructure,\n  flattenColumns,\n  assignColumnAccessor,\n  unpreparedAccessWarning,\n  makeHeaderGroups,\n  decorateColumn,\n} from '../utils'\n\nimport {\n  useGetLatest,\n  reduceHooks,\n  actions,\n  loopHooks,\n  makePropGetter,\n  makeRenderer,\n} from '../publicUtils'\n\nimport makeDefaultPluginHooks from '../makeDefaultPluginHooks'\n\nimport { useColumnVisibility } from './useColumnVisibility'\n\nconst defaultInitialState = {}\nconst defaultColumnInstance = {}\nconst defaultReducer = (state, action, prevState) => state\nconst defaultGetSubRows = (row, index) => row.subRows || []\nconst defaultGetRowId = (row, index, parent) =>\n  `${parent ? [parent.id, index].join('.') : index}`\nconst defaultUseControlledState = d => d\n\nfunction applyDefaults(props) {\n  const {\n    initialState = defaultInitialState,\n    defaultColumn = defaultColumnInstance,\n    getSubRows = defaultGetSubRows,\n    getRowId = defaultGetRowId,\n    stateReducer = defaultReducer,\n    useControlledState = defaultUseControlledState,\n    ...rest\n  } = props\n\n  return {\n    ...rest,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  }\n}\n\nexport const useTable = (props, ...plugins) => {\n  // Apply default props\n  props = applyDefaults(props)\n\n  // Add core plugins\n  plugins = [useColumnVisibility, ...plugins]\n\n  // Create the table instance\n  let instanceRef = React.useRef({})\n\n  // Create a getter for the instance (helps avoid a lot of potential memory leaks)\n  const getInstance = useGetLatest(instanceRef.current)\n\n  // Assign the props, plugins and hooks to the instance\n  Object.assign(getInstance(), {\n    ...props,\n    plugins,\n    hooks: makeDefaultPluginHooks(),\n  })\n\n  // Allow plugins to register hooks as early as possible\n  plugins.filter(Boolean).forEach(plugin => {\n    plugin(getInstance().hooks)\n  })\n\n  // Consume all hooks and make a getter for them\n  const getHooks = useGetLatest(getInstance().hooks)\n  getInstance().getHooks = getHooks\n  delete getInstance().hooks\n\n  // Allow useOptions hooks to modify the options coming into the table\n  Object.assign(\n    getInstance(),\n    reduceHooks(getHooks().useOptions, applyDefaults(props))\n  )\n\n  const {\n    data,\n    columns: userColumns,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  } = getInstance()\n\n  // Setup user reducer ref\n  const getStateReducer = useGetLatest(stateReducer)\n\n  // Build the reducer\n  const reducer = React.useCallback(\n    (state, action) => {\n      // Detect invalid actions\n      if (!action.type) {\n        console.info({ action })\n        throw new Error('Unknown Action 👆')\n      }\n\n      // Reduce the state from all plugin reducers\n      return [\n        ...getHooks().stateReducers,\n        // Allow the user to add their own state reducer(s)\n        ...(Array.isArray(getStateReducer())\n          ? getStateReducer()\n          : [getStateReducer()]),\n      ].reduce(\n        (s, handler) => handler(s, action, state, getInstance()) || s,\n        state\n      )\n    },\n    [getHooks, getStateReducer, getInstance]\n  )\n\n  // Start the reducer\n  const [reducerState, dispatch] = React.useReducer(reducer, undefined, () =>\n    reducer(initialState, { type: actions.init })\n  )\n\n  // Allow the user to control the final state with hooks\n  const state = reduceHooks(\n    [...getHooks().useControlledState, useControlledState],\n    reducerState,\n    { instance: getInstance() }\n  )\n\n  Object.assign(getInstance(), {\n    state,\n    dispatch,\n  })\n\n  // Decorate All the columns\n  const columns = React.useMemo(\n    () =>\n      linkColumnStructure(\n        reduceHooks(getHooks().columns, userColumns, {\n          instance: getInstance(),\n        })\n      ),\n    [\n      getHooks,\n      getInstance,\n      userColumns,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().columnsDeps, [], { instance: getInstance() }),\n    ]\n  )\n  getInstance().columns = columns\n\n  // Get the flat list of all columns and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let allColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().allColumns, flattenColumns(columns), {\n        instance: getInstance(),\n      }).map(assignColumnAccessor),\n    [\n      columns,\n      getHooks,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().allColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().allColumns = allColumns\n\n  // Access the row model using initial columns\n  const [rows, flatRows, rowsById] = React.useMemo(() => {\n    let rows = []\n    let flatRows = []\n    const rowsById = {}\n\n    const allColumnsQueue = [...allColumns]\n\n    while (allColumnsQueue.length) {\n      const column = allColumnsQueue.shift()\n      accessRowsForColumn({\n        data,\n        rows,\n        flatRows,\n        rowsById,\n        column,\n        getRowId,\n        getSubRows,\n        accessValueHooks: getHooks().accessValue,\n        getInstance,\n      })\n    }\n\n    return [rows, flatRows, rowsById]\n  }, [allColumns, data, getRowId, getSubRows, getHooks, getInstance])\n\n  Object.assign(getInstance(), {\n    rows,\n    initialRows: [...rows],\n    flatRows,\n    rowsById,\n    // materializedColumns,\n  })\n\n  loopHooks(getHooks().useInstanceAfterData, getInstance())\n\n  // Get the flat list of all columns AFTER the rows\n  // have been access, and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let visibleColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().visibleColumns, allColumns, {\n        instance: getInstance(),\n      }).map(d => decorateColumn(d, defaultColumn)),\n    [\n      getHooks,\n      allColumns,\n      getInstance,\n      defaultColumn,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().visibleColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n\n  // Combine new visible columns with all columns\n  allColumns = React.useMemo(() => {\n    const columns = [...visibleColumns]\n\n    allColumns.forEach(column => {\n      if (!columns.find(d => d.id === column.id)) {\n        columns.push(column)\n      }\n    })\n\n    return columns\n  }, [allColumns, visibleColumns])\n  getInstance().allColumns = allColumns\n\n  if (process.env.NODE_ENV !== 'production') {\n    const duplicateColumns = allColumns.filter((column, i) => {\n      return allColumns.findIndex(d => d.id === column.id) !== i\n    })\n\n    if (duplicateColumns.length) {\n      console.info(allColumns)\n      throw new Error(\n        `Duplicate columns were found with ids: \"${duplicateColumns\n          .map(d => d.id)\n          .join(', ')}\" in the columns array above`\n      )\n    }\n  }\n\n  // Make the headerGroups\n  const headerGroups = React.useMemo(\n    () =>\n      reduceHooks(\n        getHooks().headerGroups,\n        makeHeaderGroups(visibleColumns, defaultColumn),\n        getInstance()\n      ),\n    [\n      getHooks,\n      visibleColumns,\n      defaultColumn,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().headerGroupsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().headerGroups = headerGroups\n\n  // Get the first level of headers\n  const headers = React.useMemo(\n    () => (headerGroups.length ? headerGroups[0].headers : []),\n    [headerGroups]\n  )\n  getInstance().headers = headers\n\n  // Provide a flat header list for utilities\n  getInstance().flatHeaders = headerGroups.reduce(\n    (all, headerGroup) => [...all, ...headerGroup.headers],\n    []\n  )\n\n  loopHooks(getHooks().useInstanceBeforeDimensions, getInstance())\n\n  // Filter columns down to visible ones\n  const visibleColumnsDep = visibleColumns\n    .filter(d => d.isVisible)\n    .map(d => d.id)\n    .sort()\n    .join('_')\n\n  visibleColumns = React.useMemo(\n    () => visibleColumns.filter(d => d.isVisible),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [visibleColumns, visibleColumnsDep]\n  )\n  getInstance().visibleColumns = visibleColumns\n\n  // Header Visibility is needed by this point\n  const [\n    totalColumnsMinWidth,\n    totalColumnsWidth,\n    totalColumnsMaxWidth,\n  ] = calculateHeaderWidths(headers)\n\n  getInstance().totalColumnsMinWidth = totalColumnsMinWidth\n  getInstance().totalColumnsWidth = totalColumnsWidth\n  getInstance().totalColumnsMaxWidth = totalColumnsMaxWidth\n\n  loopHooks(getHooks().useInstance, getInstance())\n\n  // Each materialized header needs to be assigned a render function and other\n  // prop getter properties here.\n  ;[...getInstance().flatHeaders, ...getInstance().allColumns].forEach(\n    column => {\n      // Give columns/headers rendering power\n      column.render = makeRenderer(getInstance(), column)\n\n      // Give columns/headers a default getHeaderProps\n      column.getHeaderProps = makePropGetter(getHooks().getHeaderProps, {\n        instance: getInstance(),\n        column,\n      })\n\n      // Give columns/headers a default getFooterProps\n      column.getFooterProps = makePropGetter(getHooks().getFooterProps, {\n        instance: getInstance(),\n        column,\n      })\n    }\n  )\n\n  getInstance().headerGroups = React.useMemo(\n    () =>\n      headerGroups.filter((headerGroup, i) => {\n        // Filter out any headers and headerGroups that don't have visible columns\n        headerGroup.headers = headerGroup.headers.filter(column => {\n          const recurse = headers =>\n            headers.filter(column => {\n              if (column.headers) {\n                return recurse(column.headers)\n              }\n              return column.isVisible\n            }).length\n          if (column.headers) {\n            return recurse(column.headers)\n          }\n          return column.isVisible\n        })\n\n        // Give headerGroups getRowProps\n        if (headerGroup.headers.length) {\n          headerGroup.getHeaderGroupProps = makePropGetter(\n            getHooks().getHeaderGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          headerGroup.getFooterGroupProps = makePropGetter(\n            getHooks().getFooterGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          return true\n        }\n\n        return false\n      }),\n    [headerGroups, getInstance, getHooks]\n  )\n\n  getInstance().footerGroups = [...getInstance().headerGroups].reverse()\n\n  // The prepareRow function is absolutely necessary and MUST be called on\n  // any rows the user wishes to be displayed.\n\n  getInstance().prepareRow = React.useCallback(\n    row => {\n      row.getRowProps = makePropGetter(getHooks().getRowProps, {\n        instance: getInstance(),\n        row,\n      })\n\n      // Build the visible cells for each row\n      row.allCells = allColumns.map(column => {\n        const value = row.values[column.id]\n\n        const cell = {\n          column,\n          row,\n          value,\n        }\n\n        // Give each cell a getCellProps base\n        cell.getCellProps = makePropGetter(getHooks().getCellProps, {\n          instance: getInstance(),\n          cell,\n        })\n\n        // Give each cell a renderer function (supports multiple renderers)\n        cell.render = makeRenderer(getInstance(), column, {\n          row,\n          cell,\n          value,\n        })\n\n        return cell\n      })\n\n      row.cells = visibleColumns.map(column =>\n        row.allCells.find(cell => cell.column.id === column.id)\n      )\n\n      // need to apply any row specific hooks (useExpanded requires this)\n      loopHooks(getHooks().prepareRow, row, { instance: getInstance() })\n    },\n    [getHooks, getInstance, allColumns, visibleColumns]\n  )\n\n  getInstance().getTableProps = makePropGetter(getHooks().getTableProps, {\n    instance: getInstance(),\n  })\n\n  getInstance().getTableBodyProps = makePropGetter(\n    getHooks().getTableBodyProps,\n    {\n      instance: getInstance(),\n    }\n  )\n\n  loopHooks(getHooks().useFinalInstance, getInstance())\n\n  return getInstance()\n}\n\nfunction calculateHeaderWidths(headers, left = 0) {\n  let sumTotalMinWidth = 0\n  let sumTotalWidth = 0\n  let sumTotalMaxWidth = 0\n  let sumTotalFlexWidth = 0\n\n  headers.forEach(header => {\n    let { headers: subHeaders } = header\n\n    header.totalLeft = left\n\n    if (subHeaders && subHeaders.length) {\n      const [\n        totalMinWidth,\n        totalWidth,\n        totalMaxWidth,\n        totalFlexWidth,\n      ] = calculateHeaderWidths(subHeaders, left)\n      header.totalMinWidth = totalMinWidth\n      header.totalWidth = totalWidth\n      header.totalMaxWidth = totalMaxWidth\n      header.totalFlexWidth = totalFlexWidth\n    } else {\n      header.totalMinWidth = header.minWidth\n      header.totalWidth = Math.min(\n        Math.max(header.minWidth, header.width),\n        header.maxWidth\n      )\n      header.totalMaxWidth = header.maxWidth\n      header.totalFlexWidth = header.canResize ? header.totalWidth : 0\n    }\n    if (header.isVisible) {\n      left += header.totalWidth\n      sumTotalMinWidth += header.totalMinWidth\n      sumTotalWidth += header.totalWidth\n      sumTotalMaxWidth += header.totalMaxWidth\n      sumTotalFlexWidth += header.totalFlexWidth\n    }\n  })\n\n  return [sumTotalMinWidth, sumTotalWidth, sumTotalMaxWidth, sumTotalFlexWidth]\n}\n\nfunction accessRowsForColumn({\n  data,\n  rows,\n  flatRows,\n  rowsById,\n  column,\n  getRowId,\n  getSubRows,\n  accessValueHooks,\n  getInstance,\n}) {\n  // Access the row's data column-by-column\n  // We do it this way so we can incrementally add materialized\n  // columns after the first pass and avoid excessive looping\n  const accessRow = (originalRow, rowIndex, depth = 0, parent, parentRows) => {\n    // Keep the original reference around\n    const original = originalRow\n\n    const id = getRowId(originalRow, rowIndex, parent)\n\n    let row = rowsById[id]\n\n    // If the row hasn't been created, let's make it\n    if (!row) {\n      row = {\n        id,\n        original,\n        index: rowIndex,\n        depth,\n        cells: [{}], // This is a dummy cell\n      }\n\n      // Override common array functions (and the dummy cell's getCellProps function)\n      // to show an error if it is accessed without calling prepareRow\n      row.cells.map = unpreparedAccessWarning\n      row.cells.filter = unpreparedAccessWarning\n      row.cells.forEach = unpreparedAccessWarning\n      row.cells[0].getCellProps = unpreparedAccessWarning\n\n      // Create the cells and values\n      row.values = {}\n\n      // Push this row into the parentRows array\n      parentRows.push(row)\n      // Keep track of every row in a flat array\n      flatRows.push(row)\n      // Also keep track of every row by its ID\n      rowsById[id] = row\n\n      // Get the original subrows\n      row.originalSubRows = getSubRows(originalRow, rowIndex)\n\n      // Then recursively access them\n      if (row.originalSubRows) {\n        const subRows = []\n        row.originalSubRows.forEach((d, i) =>\n          accessRow(d, i, depth + 1, row, subRows)\n        )\n        // Keep the new subRows array on the row\n        row.subRows = subRows\n      }\n    } else if (row.subRows) {\n      // If the row exists, then it's already been accessed\n      // Keep recursing, but don't worry about passing the\n      // accumlator array (those rows already exist)\n      row.originalSubRows.forEach((d, i) => accessRow(d, i, depth + 1, row))\n    }\n\n    // If the column has an accessor, use it to get a value\n    if (column.accessor) {\n      row.values[column.id] = column.accessor(\n        originalRow,\n        rowIndex,\n        row,\n        parentRows,\n        data\n      )\n    }\n\n    // Allow plugins to manipulate the column value\n    row.values[column.id] = reduceHooks(\n      accessValueHooks,\n      row.values[column.id],\n      {\n        row,\n        column,\n        instance: getInstance(),\n      },\n      true\n    )\n  }\n\n  data.forEach((originalRow, rowIndex) =>\n    accessRow(originalRow, rowIndex, 0, undefined, rows)\n  )\n}\n","import React from 'react'\n\nimport { expandRows } from '../utils'\n\nimport {\n  useGetLatest,\n  actions,\n  useMountedLayoutEffect,\n  makePropGetter,\n  ensurePluginOrder,\n} from '../publicUtils'\n\n// Actions\nactions.resetExpanded = 'resetExpanded'\nactions.toggleRowExpanded = 'toggleRowExpanded'\nactions.toggleAllRowsExpanded = 'toggleAllRowsExpanded'\n\nexport const useExpanded = hooks => {\n  hooks.getToggleAllRowsExpandedProps = [defaultGetToggleAllRowsExpandedProps]\n  hooks.getToggleRowExpandedProps = [defaultGetToggleRowExpandedProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseExpanded.pluginName = 'useExpanded'\n\nconst defaultGetToggleAllRowsExpandedProps = (props, { instance }) => [\n  props,\n  {\n    onClick: e => {\n      instance.toggleAllRowsExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle All Rows Expanded',\n  },\n]\n\nconst defaultGetToggleRowExpandedProps = (props, { row }) => [\n  props,\n  {\n    onClick: () => {\n      row.toggleRowExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle Row Expanded',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      expanded: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetExpanded) {\n    return {\n      ...state,\n      expanded: instance.initialState.expanded || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsExpanded) {\n    const { value } = action\n    const { isAllRowsExpanded, rowsById } = instance\n\n    const expandAll = typeof value !== 'undefined' ? value : !isAllRowsExpanded\n\n    if (expandAll) {\n      const expanded = {}\n\n      Object.keys(rowsById).forEach(rowId => {\n        expanded[rowId] = true\n      })\n\n      return {\n        ...state,\n        expanded,\n      }\n    }\n\n    return {\n      ...state,\n      expanded: {},\n    }\n  }\n\n  if (action.type === actions.toggleRowExpanded) {\n    const { id, value: setExpanded } = action\n    const exists = state.expanded[id]\n\n    const shouldExist =\n      typeof setExpanded !== 'undefined' ? setExpanded : !exists\n\n    if (!exists && shouldExist) {\n      return {\n        ...state,\n        expanded: {\n          ...state.expanded,\n          [id]: true,\n        },\n      }\n    } else if (exists && !shouldExist) {\n      const { [id]: _, ...rest } = state.expanded\n      return {\n        ...state,\n        expanded: rest,\n      }\n    } else {\n      return state\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    rowsById,\n    manualExpandedKey = 'expanded',\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    autoResetExpanded = true,\n    getHooks,\n    plugins,\n    state: { expanded },\n    dispatch,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useSortBy', 'useGroupBy', 'usePivotColumns', 'useGlobalFilter'],\n    'useExpanded'\n  )\n\n  const getAutoResetExpanded = useGetLatest(autoResetExpanded)\n\n  let isAllRowsExpanded = Boolean(\n    Object.keys(rowsById).length && Object.keys(expanded).length\n  )\n\n  if (isAllRowsExpanded) {\n    if (Object.keys(rowsById).some(id => !expanded[id])) {\n      isAllRowsExpanded = false\n    }\n  }\n\n  // Bypass any effects from firing when this changes\n  useMountedLayoutEffect(() => {\n    if (getAutoResetExpanded()) {\n      dispatch({ type: actions.resetExpanded })\n    }\n  }, [dispatch, data])\n\n  const toggleRowExpanded = React.useCallback(\n    (id, value) => {\n      dispatch({ type: actions.toggleRowExpanded, id, value })\n    },\n    [dispatch]\n  )\n\n  const toggleAllRowsExpanded = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsExpanded, value }),\n    [dispatch]\n  )\n\n  const expandedRows = React.useMemo(() => {\n    if (paginateExpandedRows) {\n      return expandRows(rows, { manualExpandedKey, expanded, expandSubRows })\n    }\n\n    return rows\n  }, [paginateExpandedRows, rows, manualExpandedKey, expanded, expandSubRows])\n\n  const expandedDepth = React.useMemo(() => findExpandedDepth(expanded), [\n    expanded,\n  ])\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsExpandedProps = makePropGetter(\n    getHooks().getToggleAllRowsExpandedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    preExpandedRows: rows,\n    expandedRows,\n    rows: expandedRows,\n    expandedDepth,\n    isAllRowsExpanded,\n    toggleRowExpanded,\n    toggleAllRowsExpanded,\n    getToggleAllRowsExpandedProps,\n  })\n}\n\nfunction prepareRow(row, { instance: { getHooks }, instance }) {\n  row.toggleRowExpanded = set => instance.toggleRowExpanded(row.id, set)\n\n  row.getToggleRowExpandedProps = makePropGetter(\n    getHooks().getToggleRowExpandedProps,\n    {\n      instance,\n      row,\n    }\n  )\n}\n\nfunction findExpandedDepth(expanded) {\n  let maxDepth = 0\n\n  Object.keys(expanded).forEach(id => {\n    const splitId = id.split('.')\n    maxDepth = Math.max(maxDepth, splitId.length)\n  })\n\n  return maxDepth\n}\n","export const text = (rows, ids, filterValue) => {\n  rows = rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return String(rowValue)\n        .toLowerCase()\n        .includes(String(filterValue).toLowerCase())\n    })\n  })\n  return rows\n}\n\ntext.autoRemove = val => !val\n\nexport const exactText = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue).toLowerCase() === String(filterValue).toLowerCase()\n        : true\n    })\n  })\n}\n\nexactText.autoRemove = val => !val\n\nexport const exactTextCase = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue) === String(filterValue)\n        : true\n    })\n  })\n}\n\nexactTextCase.autoRemove = val => !val\n\nexport const includes = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue.includes(filterValue)\n    })\n  })\n}\n\nincludes.autoRemove = val => !val || !val.length\n\nexport const includesAll = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.every(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesAll.autoRemove = val => !val || !val.length\n\nexport const includesSome = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.some(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesSome.autoRemove = val => !val || !val.length\n\nexport const includesValue = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return filterValue.includes(rowValue)\n    })\n  })\n}\n\nincludesValue.autoRemove = val => !val || !val.length\n\nexport const exact = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue === filterValue\n    })\n  })\n}\n\nexact.autoRemove = val => typeof val === 'undefined'\n\nexport const equals = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      // eslint-disable-next-line eqeqeq\n      return rowValue == filterValue\n    })\n  })\n}\n\nequals.autoRemove = val => val == null\n\nexport const between = (rows, ids, filterValue) => {\n  let [min, max] = filterValue || []\n\n  min = typeof min === 'number' ? min : -Infinity\n  max = typeof max === 'number' ? max : Infinity\n\n  if (min > max) {\n    const temp = min\n    min = max\n    max = temp\n  }\n\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue >= min && rowValue <= max\n    })\n  })\n}\n\nbetween.autoRemove = val =>\n  !val || (typeof val[0] !== 'number' && typeof val[1] !== 'number')\n","import React from 'react'\n\nimport {\n  getFirstDefined,\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n} from '../utils'\n\nimport {\n  actions,\n  useGetLatest,\n  functionalUpdate,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetFilters = 'resetFilters'\nactions.setFilter = 'setFilter'\nactions.setAllFilters = 'setAllFilters'\n\nexport const useFilters = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseFilters.pluginName = 'useFilters'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      filters: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetFilters) {\n    return {\n      ...state,\n      filters: instance.initialState.filters || [],\n    }\n  }\n\n  if (action.type === actions.setFilter) {\n    const { columnId, filterValue } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    const column = allColumns.find(d => d.id === columnId)\n\n    if (!column) {\n      throw new Error(\n        `React-Table: Could not find a column with id: ${columnId}`\n      )\n    }\n\n    const filterMethod = getFilterMethod(\n      column.filter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const previousfilter = state.filters.find(d => d.id === columnId)\n\n    const newFilter = functionalUpdate(\n      filterValue,\n      previousfilter && previousfilter.value\n    )\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter, column)) {\n      return {\n        ...state,\n        filters: state.filters.filter(d => d.id !== columnId),\n      }\n    }\n\n    if (previousfilter) {\n      return {\n        ...state,\n        filters: state.filters.map(d => {\n          if (d.id === columnId) {\n            return { id: columnId, value: newFilter }\n          }\n          return d\n        }),\n      }\n    }\n\n    return {\n      ...state,\n      filters: [...state.filters, { id: columnId, value: newFilter }],\n    }\n  }\n\n  if (action.type === actions.setAllFilters) {\n    const { filters } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    return {\n      ...state,\n      // Filter out undefined values\n      filters: functionalUpdate(filters, state.filters).filter(filter => {\n        const column = allColumns.find(d => d.id === filter.id)\n        const filterMethod = getFilterMethod(\n          column.filter,\n          userFilterTypes || {},\n          filterTypes\n        )\n\n        if (\n          shouldAutoRemoveFilter(filterMethod.autoRemove, filter.value, column)\n        ) {\n          return false\n        }\n        return true\n      }),\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    manualFilters,\n    defaultCanFilter = false,\n    disableFilters,\n    state: { filters },\n    dispatch,\n    autoResetFilters = true,\n  } = instance\n\n  const setFilter = React.useCallback(\n    (columnId, filterValue) => {\n      dispatch({ type: actions.setFilter, columnId, filterValue })\n    },\n    [dispatch]\n  )\n\n  const setAllFilters = React.useCallback(\n    filters => {\n      dispatch({\n        type: actions.setAllFilters,\n        filters,\n      })\n    },\n    [dispatch]\n  )\n\n  allColumns.forEach(column => {\n    const {\n      id,\n      accessor,\n      defaultCanFilter: columnDefaultCanFilter,\n      disableFilters: columnDisableFilters,\n    } = column\n\n    // Determine if a column is filterable\n    column.canFilter = accessor\n      ? getFirstDefined(\n          columnDisableFilters === true ? false : undefined,\n          disableFilters === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(columnDefaultCanFilter, defaultCanFilter, false)\n\n    // Provide the column a way of updating the filter value\n    column.setFilter = val => setFilter(column.id, val)\n\n    // Provide the current filter value to the column for\n    // convenience\n    const found = filters.find(d => d.id === id)\n    column.filterValue = found && found.value\n  })\n\n  const [\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualFilters || !filters.length) {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    // Filters top level and nested rows\n    const filterRows = (rows, depth = 0) => {\n      let filteredRows = rows\n\n      filteredRows = filters.reduce(\n        (filteredSoFar, { id: columnId, value: filterValue }) => {\n          // Find the filters column\n          const column = allColumns.find(d => d.id === columnId)\n\n          if (!column) {\n            return filteredSoFar\n          }\n\n          if (depth === 0) {\n            column.preFilteredRows = filteredSoFar\n          }\n\n          const filterMethod = getFilterMethod(\n            column.filter,\n            userFilterTypes || {},\n            filterTypes\n          )\n\n          if (!filterMethod) {\n            console.warn(\n              `Could not find a valid 'column.filter' for column with the ID: ${column.id}.`\n            )\n            return filteredSoFar\n          }\n\n          // Pass the rows, id, filterValue and column to the filterMethod\n          // to get the filtered rows back\n          column.filteredRows = filterMethod(\n            filteredSoFar,\n            [columnId],\n            filterValue\n          )\n\n          return column.filteredRows\n        },\n        rows\n      )\n\n      // Apply the filter to any subRows\n      // We technically could do this recursively in the above loop,\n      // but that would severely hinder the API for the user, since they\n      // would be required to do that recursion in some scenarios\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n        if (!row.subRows) {\n          return\n        }\n\n        row.subRows =\n          row.subRows && row.subRows.length > 0\n            ? filterRows(row.subRows, depth + 1)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualFilters,\n    filters,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userFilterTypes,\n  ])\n\n  React.useMemo(() => {\n    // Now that each filtered column has it's partially filtered rows,\n    // lets assign the final filtered rows to all of the other columns\n    const nonFilteredColumns = allColumns.filter(\n      column => !filters.find(d => d.id === column.id)\n    )\n\n    // This essentially enables faceted filter options to be built easily\n    // using every column's preFilteredRows value\n    nonFilteredColumns.forEach(column => {\n      column.preFilteredRows = filteredRows\n      column.filteredRows = filteredRows\n    })\n  }, [filteredRows, filters, allColumns])\n\n  const getAutoResetFilters = useGetLatest(autoResetFilters)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetFilters()) {\n      dispatch({ type: actions.resetFilters })\n    }\n  }, [dispatch, manualFilters ? null : data])\n\n  Object.assign(instance, {\n    preFilteredRows: rows,\n    preFilteredFlatRows: flatRows,\n    preFilteredRowsById: rowsById,\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n    rows: filteredRows,\n    flatRows: filteredFlatRows,\n    rowsById: filteredRowsById,\n    setFilter,\n    setAllFilters,\n  })\n}\n","import React from 'react'\n\nimport {\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n  getFirstDefined,\n} from '../utils'\n\nimport {\n  actions,\n  useMountedLayoutEffect,\n  functionalUpdate,\n  useGetLatest,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetGlobalFilter = 'resetGlobalFilter'\nactions.setGlobalFilter = 'setGlobalFilter'\n\nexport const useGlobalFilter = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseGlobalFilter.pluginName = 'useGlobalFilter'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.resetGlobalFilter) {\n    return {\n      ...state,\n      globalFilter: instance.initialState.globalFilter || undefined,\n    }\n  }\n\n  if (action.type === actions.setGlobalFilter) {\n    const { filterValue } = action\n    const { userFilterTypes } = instance\n\n    const filterMethod = getFilterMethod(\n      instance.globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const newFilter = functionalUpdate(filterValue, state.globalFilter)\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter)) {\n      const { globalFilter, ...stateWithoutGlobalFilter } = state\n      return stateWithoutGlobalFilter\n    }\n\n    return {\n      ...state,\n      globalFilter: newFilter,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    globalFilter,\n    manualGlobalFilter,\n    state: { globalFilter: globalFilterValue },\n    dispatch,\n    autoResetGlobalFilter = true,\n    disableGlobalFilter,\n  } = instance\n\n  const setGlobalFilter = React.useCallback(\n    filterValue => {\n      dispatch({ type: actions.setGlobalFilter, filterValue })\n    },\n    [dispatch]\n  )\n\n  // TODO: Create a filter cache for incremental high speed multi-filtering\n  // This gets pretty complicated pretty fast, since you have to maintain a\n  // cache for each row group (top-level rows, and each row's recursive subrows)\n  // This would make multi-filtering a lot faster though. Too far?\n\n  const [\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualGlobalFilter || typeof globalFilterValue === 'undefined') {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    const filterMethod = getFilterMethod(\n      globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    if (!filterMethod) {\n      console.warn(`Could not find a valid 'globalFilter' option.`)\n      return rows\n    }\n\n    allColumns.forEach(column => {\n      const { disableGlobalFilter: columnDisableGlobalFilter } = column\n\n      column.canFilter = getFirstDefined(\n        columnDisableGlobalFilter === true ? false : undefined,\n        disableGlobalFilter === true ? false : undefined,\n        true\n      )\n    })\n\n    const filterableColumns = allColumns.filter(c => c.canFilter === true)\n\n    // Filters top level and nested rows\n    const filterRows = filteredRows => {\n      filteredRows = filterMethod(\n        filteredRows,\n        filterableColumns.map(d => d.id),\n        globalFilterValue\n      )\n\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n\n        row.subRows =\n          row.subRows && row.subRows.length\n            ? filterRows(row.subRows)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualGlobalFilter,\n    globalFilterValue,\n    globalFilter,\n    userFilterTypes,\n    allColumns,\n    rows,\n    flatRows,\n    rowsById,\n    disableGlobalFilter,\n  ])\n\n  const getAutoResetGlobalFilter = useGetLatest(autoResetGlobalFilter)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGlobalFilter()) {\n      dispatch({ type: actions.resetGlobalFilter })\n    }\n  }, [dispatch, manualGlobalFilter ? null : data])\n\n  Object.assign(instance, {\n    preGlobalFilteredRows: rows,\n    preGlobalFilteredFlatRows: flatRows,\n    preGlobalFilteredRowsById: rowsById,\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n    rows: globalFilteredRows,\n    flatRows: globalFilteredFlatRows,\n    rowsById: globalFilteredRowsById,\n    setGlobalFilter,\n    disableGlobalFilter,\n  })\n}\n","export function sum(values, aggregatedValues) {\n  // It's faster to just add the aggregations together instead of\n  // process leaf nodes individually\n  return aggregatedValues.reduce(\n    (sum, next) => sum + (typeof next === 'number' ? next : 0),\n    0\n  )\n}\n\nexport function min(values) {\n  let min = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n    }\n  })\n\n  return min\n}\n\nexport function max(values) {\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      max = Math.max(max, value)\n    }\n  })\n\n  return max\n}\n\nexport function minMax(values) {\n  let min = values[0] || 0\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n      max = Math.max(max, value)\n    }\n  })\n\n  return `${min}..${max}`\n}\n\nexport function average(values) {\n  return sum(null, values) / values.length\n}\n\nexport function median(values) {\n  if (!values.length) {\n    return null\n  }\n\n  const mid = Math.floor(values.length / 2)\n  const nums = [...values].sort((a, b) => a - b)\n  return values.length % 2 !== 0 ? nums[mid] : (nums[mid - 1] + nums[mid]) / 2\n}\n\nexport function unique(values) {\n  return Array.from(new Set(values).values())\n}\n\nexport function uniqueCount(values) {\n  return new Set(values).size\n}\n\nexport function count(values) {\n  return values.length\n}\n","import React from 'react'\n\nimport * as aggregations from '../aggregations'\n\nimport { getFirstDefined, flattenBy } from '../utils'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst emptyArray = []\nconst emptyObject = {}\n\n// Actions\nactions.resetGroupBy = 'resetGroupBy'\nactions.setGroupBy = 'setGroupBy'\nactions.toggleGroupBy = 'toggleGroupBy'\n\nexport const useGroupBy = hooks => {\n  hooks.getGroupByToggleProps = [defaultGetGroupByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.groupBy,\n  ])\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseGroupBy.pluginName = 'useGroupBy'\n\nconst defaultGetGroupByToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canGroupBy\n      ? e => {\n          e.persist()\n          header.toggleGroupBy()\n        }\n      : undefined,\n    style: {\n      cursor: header.canGroupBy ? 'pointer' : undefined,\n    },\n    title: 'Toggle GroupBy',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      groupBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetGroupBy) {\n    return {\n      ...state,\n      groupBy: instance.initialState.groupBy || [],\n    }\n  }\n\n  if (action.type === actions.setGroupBy) {\n    const { value } = action\n    return {\n      ...state,\n      groupBy: value,\n    }\n  }\n\n  if (action.type === actions.toggleGroupBy) {\n    const { columnId, value: setGroupBy } = action\n\n    const resolvedGroupBy =\n      typeof setGroupBy !== 'undefined'\n        ? setGroupBy\n        : !state.groupBy.includes(columnId)\n\n    if (resolvedGroupBy) {\n      return {\n        ...state,\n        groupBy: [...state.groupBy, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      groupBy: state.groupBy.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { groupBy },\n    },\n  }\n) {\n  // Sort grouped columns to the start of the column list\n  // before the headers are built\n\n  const groupByColumns = groupBy\n    .map(g => columns.find(col => col.id === g))\n    .filter(Boolean)\n\n  const nonGroupByColumns = columns.filter(col => !groupBy.includes(col.id))\n\n  columns = [...groupByColumns, ...nonGroupByColumns]\n\n  columns.forEach(column => {\n    column.isGrouped = groupBy.includes(column.id)\n    column.groupedIndex = groupBy.indexOf(column.id)\n  })\n\n  return columns\n}\n\nconst defaultUserAggregations = {}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    flatHeaders,\n    groupByFn = defaultGroupByFn,\n    manualGroupBy,\n    aggregations: userAggregations = defaultUserAggregations,\n    plugins,\n    state: { groupBy },\n    dispatch,\n    autoResetGroupBy = true,\n    disableGroupBy,\n    defaultCanGroupBy,\n    getHooks,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useColumnOrder', 'useFilters'], 'useGroupBy')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultGroupBy: defaultColumnGroupBy,\n      disableGroupBy: columnDisableGroupBy,\n    } = column\n\n    column.canGroupBy = accessor\n      ? getFirstDefined(\n          column.canGroupBy,\n          columnDisableGroupBy === true ? false : undefined,\n          disableGroupBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canGroupBy,\n          defaultColumnGroupBy,\n          defaultCanGroupBy,\n          false\n        )\n\n    if (column.canGroupBy) {\n      column.toggleGroupBy = () => instance.toggleGroupBy(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const toggleGroupBy = React.useCallback(\n    (columnId, value) => {\n      dispatch({ type: actions.toggleGroupBy, columnId, value })\n    },\n    [dispatch]\n  )\n\n  const setGroupBy = React.useCallback(\n    value => {\n      dispatch({ type: actions.setGroupBy, value })\n    },\n    [dispatch]\n  )\n\n  flatHeaders.forEach(header => {\n    header.getGroupByToggleProps = makePropGetter(\n      getHooks().getGroupByToggleProps,\n      { instance: getInstance(), header }\n    )\n  })\n\n  const [\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n  ] = React.useMemo(() => {\n    if (manualGroupBy || !groupBy.length) {\n      return [\n        rows,\n        flatRows,\n        rowsById,\n        emptyArray,\n        emptyObject,\n        flatRows,\n        rowsById,\n      ]\n    }\n\n    // Ensure that the list of filtered columns exist\n    const existingGroupBy = groupBy.filter(g =>\n      allColumns.find(col => col.id === g)\n    )\n\n    // Find the columns that can or are aggregating\n    // Uses each column to aggregate rows into a single value\n    const aggregateRowsToValues = (leafRows, groupedRows, depth) => {\n      const values = {}\n\n      allColumns.forEach(column => {\n        // Don't aggregate columns that are in the groupBy\n        if (existingGroupBy.includes(column.id)) {\n          values[column.id] = groupedRows[0]\n            ? groupedRows[0].values[column.id]\n            : null\n          return\n        }\n\n        // Aggregate the values\n        let aggregateFn =\n          typeof column.aggregate === 'function'\n            ? column.aggregate\n            : userAggregations[column.aggregate] ||\n              aggregations[column.aggregate]\n\n        if (aggregateFn) {\n          // Get the columnValues to aggregate\n          const groupedValues = groupedRows.map(row => row.values[column.id])\n\n          // Get the columnValues to aggregate\n          const leafValues = leafRows.map(row => {\n            let columnValue = row.values[column.id]\n\n            if (!depth && column.aggregateValue) {\n              const aggregateValueFn =\n                typeof column.aggregateValue === 'function'\n                  ? column.aggregateValue\n                  : userAggregations[column.aggregateValue] ||\n                    aggregations[column.aggregateValue]\n\n              if (!aggregateValueFn) {\n                console.info({ column })\n                throw new Error(\n                  `React Table: Invalid column.aggregateValue option for column listed above`\n                )\n              }\n\n              columnValue = aggregateValueFn(columnValue, row, column)\n            }\n            return columnValue\n          })\n\n          values[column.id] = aggregateFn(leafValues, groupedValues)\n        } else if (column.aggregate) {\n          console.info({ column })\n          throw new Error(\n            `React Table: Invalid column.aggregate option for column listed above`\n          )\n        } else {\n          values[column.id] = null\n        }\n      })\n\n      return values\n    }\n\n    let groupedFlatRows = []\n    const groupedRowsById = {}\n    const onlyGroupedFlatRows = []\n    const onlyGroupedRowsById = {}\n    const nonGroupedFlatRows = []\n    const nonGroupedRowsById = {}\n\n    // Recursively group the data\n    const groupUpRecursively = (rows, depth = 0, parentId) => {\n      // This is the last level, just return the rows\n      if (depth === existingGroupBy.length) {\n        return rows\n      }\n\n      const columnId = existingGroupBy[depth]\n\n      // Group the rows together for this level\n      let rowGroupsMap = groupByFn(rows, columnId)\n\n      // Peform aggregations for each group\n      const aggregatedGroupedRows = Object.entries(rowGroupsMap).map(\n        ([groupByVal, groupedRows], index) => {\n          let id = `${columnId}:${groupByVal}`\n          id = parentId ? `${parentId}>${id}` : id\n\n          // First, Recurse to group sub rows before aggregation\n          const subRows = groupUpRecursively(groupedRows, depth + 1, id)\n\n          // Flatten the leaf rows of the rows in this group\n          const leafRows = depth\n            ? flattenBy(groupedRows, 'leafRows')\n            : groupedRows\n\n          const values = aggregateRowsToValues(leafRows, groupedRows, depth)\n\n          const row = {\n            id,\n            isGrouped: true,\n            groupByID: columnId,\n            groupByVal,\n            values,\n            subRows,\n            leafRows,\n            depth,\n            index,\n          }\n\n          subRows.forEach(subRow => {\n            groupedFlatRows.push(subRow)\n            groupedRowsById[subRow.id] = subRow\n            if (subRow.isGrouped) {\n              onlyGroupedFlatRows.push(subRow)\n              onlyGroupedRowsById[subRow.id] = subRow\n            } else {\n              nonGroupedFlatRows.push(subRow)\n              nonGroupedRowsById[subRow.id] = subRow\n            }\n          })\n\n          return row\n        }\n      )\n\n      return aggregatedGroupedRows\n    }\n\n    const groupedRows = groupUpRecursively(rows)\n\n    groupedRows.forEach(subRow => {\n      groupedFlatRows.push(subRow)\n      groupedRowsById[subRow.id] = subRow\n      if (subRow.isGrouped) {\n        onlyGroupedFlatRows.push(subRow)\n        onlyGroupedRowsById[subRow.id] = subRow\n      } else {\n        nonGroupedFlatRows.push(subRow)\n        nonGroupedRowsById[subRow.id] = subRow\n      }\n    })\n\n    // Assign the new data\n    return [\n      groupedRows,\n      groupedFlatRows,\n      groupedRowsById,\n      onlyGroupedFlatRows,\n      onlyGroupedRowsById,\n      nonGroupedFlatRows,\n      nonGroupedRowsById,\n    ]\n  }, [\n    manualGroupBy,\n    groupBy,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userAggregations,\n    groupByFn,\n  ])\n\n  const getAutoResetGroupBy = useGetLatest(autoResetGroupBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGroupBy()) {\n      dispatch({ type: actions.resetGroupBy })\n    }\n  }, [dispatch, manualGroupBy ? null : data])\n\n  Object.assign(instance, {\n    preGroupedRows: rows,\n    preGroupedFlatRow: flatRows,\n    preGroupedRowsById: rowsById,\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n    rows: groupedRows,\n    flatRows: groupedFlatRows,\n    rowsById: groupedRowsById,\n    toggleGroupBy,\n    setGroupBy,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the groupBy and the pivot cell for the row\n    cell.isGrouped = cell.column.isGrouped && cell.column.id === row.groupByID\n    // Placeholder cells are any columns in the groupBy that are not grouped\n    cell.isPlaceholder = !cell.isGrouped && cell.column.isGrouped\n    // Aggregated cells are not grouped, not repeated, but still have subRows\n    cell.isAggregated =\n      !cell.isGrouped && !cell.isPlaceholder && row.subRows?.length\n  })\n}\n\nexport function defaultGroupByFn(rows, columnId) {\n  return rows.reduce((prev, row, i) => {\n    // TODO: Might want to implement a key serializer here so\n    // irregular column values can still be grouped if needed?\n    const resKey = `${row.values[columnId]}`\n    prev[resKey] = Array.isArray(prev[resKey]) ? prev[resKey] : []\n    prev[resKey].push(row)\n    return prev\n  }, {})\n}\n","const reSplitAlphaNumeric = /([0-9]+)/gm\n\n// Mixed sorting is slow, but very inclusive of many edge cases.\n// It handles numbers, mixed alphanumeric combinations, and even\n// null, undefined, and Infinity\nexport const alphanumeric = (rowA, rowB, columnId) => {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  // Force to strings (or \"\" for unsupported types)\n  a = toString(a)\n  b = toString(b)\n\n  // Split on number groups, but keep the delimiter\n  // Then remove falsey split values\n  a = a.split(reSplitAlphaNumeric).filter(Boolean)\n  b = b.split(reSplitAlphaNumeric).filter(Boolean)\n\n  // While\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    const an = parseInt(aa, 10)\n    const bn = parseInt(bb, 10)\n\n    const combo = [an, bn].sort()\n\n    // Both are string\n    if (isNaN(combo[0])) {\n      if (aa > bb) {\n        return 1\n      }\n      if (bb > aa) {\n        return -1\n      }\n      continue\n    }\n\n    // One is a string, one is a number\n    if (isNaN(combo[1])) {\n      return isNaN(an) ? -1 : 1\n    }\n\n    // Both are numbers\n    if (an > bn) {\n      return 1\n    }\n    if (bn > an) {\n      return -1\n    }\n  }\n\n  return a.length - b.length\n}\nexport function datetime(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  a = a.getTime()\n  b = b.getTime()\n\n  return compareBasic(a, b)\n}\n\nexport function basic(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  return compareBasic(a, b)\n}\n\nexport function string(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  a = a.split('').filter(Boolean)\n  b = b.split('').filter(Boolean)\n\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    let alower = aa.toLowerCase()\n    let blower = bb.toLowerCase()\n\n    // Case insensitive comparison until characters match\n    if (alower > blower) {\n      return 1\n    }\n    if (blower > alower) {\n      return -1\n    }\n    // If lowercase characters are identical\n    if (aa > bb) {\n      return 1\n    }\n    if (bb > aa) {\n      return -1\n    }\n    continue\n  }\n\n  return a.length - b.length\n}\n\nexport function number(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  const replaceNonNumeric = /[^0-9.]/gi\n\n  a = Number(String(a).replace(replaceNonNumeric, ''))\n  b = Number(String(b).replace(replaceNonNumeric, ''))\n\n  return compareBasic(a, b)\n}\n\n// Utils\n\nfunction compareBasic(a, b) {\n  return a === b ? 0 : a > b ? 1 : -1\n}\n\nfunction getRowValuesByColumnID(row1, row2, columnId) {\n  return [row1.values[columnId], row2.values[columnId]]\n}\n\nfunction toString(a) {\n  if (typeof a === 'number') {\n    if (isNaN(a) || a === Infinity || a === -Infinity) {\n      return ''\n    }\n    return String(a)\n  }\n  if (typeof a === 'string') {\n    return a\n  }\n  return ''\n}\n","import React from 'react'\n\nimport {\n  actions,\n  ensurePluginOrder,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, isFunction } from '../utils'\n\nimport * as sortTypes from '../sortTypes'\n\n// Actions\nactions.resetSortBy = 'resetSortBy'\nactions.setSortBy = 'setSortBy'\nactions.toggleSortBy = 'toggleSortBy'\nactions.clearSortBy = 'clearSortBy'\n\ndefaultColumn.sortType = 'alphanumeric'\ndefaultColumn.sortDescFirst = false\n\nexport const useSortBy = hooks => {\n  hooks.getSortByToggleProps = [defaultGetSortByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseSortBy.pluginName = 'useSortBy'\n\nconst defaultGetSortByToggleProps = (props, { instance, column }) => {\n  const { isMultiSortEvent = e => e.shiftKey } = instance\n\n  return [\n    props,\n    {\n      onClick: column.canSort\n        ? e => {\n            e.persist()\n            column.toggleSortBy(\n              undefined,\n              !instance.disableMultiSort && isMultiSortEvent(e)\n            )\n          }\n        : undefined,\n      style: {\n        cursor: column.canSort ? 'pointer' : undefined,\n      },\n      title: column.canSort ? 'Toggle SortBy' : undefined,\n    },\n  ]\n}\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      sortBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSortBy) {\n    return {\n      ...state,\n      sortBy: instance.initialState.sortBy || [],\n    }\n  }\n\n  if (action.type === actions.clearSortBy) {\n    const { sortBy } = state\n    const newSortBy = sortBy.filter(d => d.id !== action.columnId)\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n\n  if (action.type === actions.setSortBy) {\n    const { sortBy } = action\n    return {\n      ...state,\n      sortBy,\n    }\n  }\n\n  if (action.type === actions.toggleSortBy) {\n    const { columnId, desc, multi } = action\n\n    const {\n      allColumns,\n      disableMultiSort,\n      disableSortRemove,\n      disableMultiRemove,\n      maxMultiSortColCount = Number.MAX_SAFE_INTEGER,\n    } = instance\n\n    const { sortBy } = state\n\n    // Find the column for this columnId\n    const column = allColumns.find(d => d.id === columnId)\n    const { sortDescFirst } = column\n\n    // Find any existing sortBy for this column\n    const existingSortBy = sortBy.find(d => d.id === columnId)\n    const existingIndex = sortBy.findIndex(d => d.id === columnId)\n    const hasDescDefined = typeof desc !== 'undefined' && desc !== null\n\n    let newSortBy = []\n\n    // What should we do with this sort action?\n    let sortAction\n\n    if (!disableMultiSort && multi) {\n      if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'add'\n      }\n    } else {\n      // Normal mode\n      if (existingIndex !== sortBy.length - 1 || sortBy.length !== 1) {\n        sortAction = 'replace'\n      } else if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'replace'\n      }\n    }\n\n    // Handle toggle states that will remove the sortBy\n    if (\n      sortAction === 'toggle' && // Must be toggling\n      !disableSortRemove && // If disableSortRemove, disable in general\n      !hasDescDefined && // Must not be setting desc\n      (multi ? !disableMultiRemove : true) && // If multi, don't allow if disableMultiRemove\n      ((existingSortBy && // Finally, detect if it should indeed be removed\n        existingSortBy.desc &&\n        !sortDescFirst) ||\n        (!existingSortBy.desc && sortDescFirst))\n    ) {\n      sortAction = 'remove'\n    }\n\n    if (sortAction === 'replace') {\n      newSortBy = [\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n    } else if (sortAction === 'add') {\n      newSortBy = [\n        ...sortBy,\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n      // Take latest n columns\n      newSortBy.splice(0, newSortBy.length - maxMultiSortColCount)\n    } else if (sortAction === 'toggle') {\n      // This flips (or sets) the\n      newSortBy = sortBy.map(d => {\n        if (d.id === columnId) {\n          return {\n            ...d,\n            desc: hasDescDefined ? desc : !existingSortBy.desc,\n          }\n        }\n        return d\n      })\n    } else if (sortAction === 'remove') {\n      newSortBy = sortBy.filter(d => d.id !== columnId)\n    }\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn = defaultOrderByFn,\n    sortTypes: userSortTypes,\n    manualSortBy,\n    defaultCanSort,\n    disableSortBy,\n    flatHeaders,\n    state: { sortBy },\n    dispatch,\n    plugins,\n    getHooks,\n    autoResetSortBy = true,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGlobalFilter', 'useGroupBy', 'usePivotColumns'],\n    'useSortBy'\n  )\n\n  const setSortBy = React.useCallback(\n    sortBy => {\n      dispatch({ type: actions.setSortBy, sortBy })\n    },\n    [dispatch]\n  )\n\n  // Updates sorting based on a columnId, desc flag and multi flag\n  const toggleSortBy = React.useCallback(\n    (columnId, desc, multi) => {\n      dispatch({ type: actions.toggleSortBy, columnId, desc, multi })\n    },\n    [dispatch]\n  )\n\n  // use reference to avoid memory leak in #1608\n  const getInstance = useGetLatest(instance)\n\n  // Add the getSortByToggleProps method to columns and headers\n  flatHeaders.forEach(column => {\n    const {\n      accessor,\n      canSort: defaultColumnCanSort,\n      disableSortBy: columnDisableSortBy,\n      id,\n    } = column\n\n    const canSort = accessor\n      ? getFirstDefined(\n          columnDisableSortBy === true ? false : undefined,\n          disableSortBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(defaultCanSort, defaultColumnCanSort, false)\n\n    column.canSort = canSort\n\n    if (column.canSort) {\n      column.toggleSortBy = (desc, multi) =>\n        toggleSortBy(column.id, desc, multi)\n\n      column.clearSortBy = () => {\n        dispatch({ type: actions.clearSortBy, columnId: column.id })\n      }\n    }\n\n    column.getSortByToggleProps = makePropGetter(\n      getHooks().getSortByToggleProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n\n    const columnSort = sortBy.find(d => d.id === id)\n    column.isSorted = !!columnSort\n    column.sortedIndex = sortBy.findIndex(d => d.id === id)\n    column.isSortedDesc = column.isSorted ? columnSort.desc : undefined\n  })\n\n  const [sortedRows, sortedFlatRows] = React.useMemo(() => {\n    if (manualSortBy || !sortBy.length) {\n      return [rows, flatRows]\n    }\n\n    const sortedFlatRows = []\n\n    // Filter out sortBys that correspond to non existing columns\n    const availableSortBy = sortBy.filter(sort =>\n      allColumns.find(col => col.id === sort.id)\n    )\n\n    const sortData = rows => {\n      // Use the orderByFn to compose multiple sortBy's together.\n      // This will also perform a stable sorting using the row index\n      // if needed.\n      const sortedData = orderByFn(\n        rows,\n        availableSortBy.map(sort => {\n          // Support custom sorting methods for each column\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (!column) {\n            throw new Error(\n              `React-Table: Could not find a column with id: ${sort.id} while sorting`\n            )\n          }\n\n          const { sortType } = column\n\n          // Look up sortBy functions in this order:\n          // column function\n          // column string lookup on user sortType\n          // column string lookup on built-in sortType\n          // default function\n          // default string lookup on user sortType\n          // default string lookup on built-in sortType\n          const sortMethod =\n            isFunction(sortType) ||\n            (userSortTypes || {})[sortType] ||\n            sortTypes[sortType]\n\n          if (!sortMethod) {\n            throw new Error(\n              `React-Table: Could not find a valid sortType of '${sortType}' for column '${sort.id}'.`\n            )\n          }\n\n          // Return the correct sortFn.\n          // This function should always return in ascending order\n          return (a, b) => sortMethod(a, b, sort.id, sort.desc)\n        }),\n        // Map the directions\n        availableSortBy.map(sort => {\n          // Detect and use the sortInverted option\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (column && column.sortInverted) {\n            return sort.desc\n          }\n\n          return !sort.desc\n        })\n      )\n\n      // If there are sub-rows, sort them\n      sortedData.forEach(row => {\n        sortedFlatRows.push(row)\n        if (!row.subRows || row.subRows.length === 0) {\n          return\n        }\n        row.subRows = sortData(row.subRows)\n      })\n\n      return sortedData\n    }\n\n    return [sortData(rows), sortedFlatRows]\n  }, [\n    manualSortBy,\n    sortBy,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn,\n    userSortTypes,\n  ])\n\n  const getAutoResetSortBy = useGetLatest(autoResetSortBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSortBy()) {\n      dispatch({ type: actions.resetSortBy })\n    }\n  }, [manualSortBy ? null : data])\n\n  Object.assign(instance, {\n    preSortedRows: rows,\n    preSortedFlatRows: flatRows,\n    sortedRows,\n    sortedFlatRows,\n    rows: sortedRows,\n    flatRows: sortedFlatRows,\n    setSortBy,\n    toggleSortBy,\n  })\n}\n\nexport function defaultOrderByFn(arr, funcs, dirs) {\n  return [...arr].sort((rowA, rowB) => {\n    for (let i = 0; i < funcs.length; i += 1) {\n      const sortFn = funcs[i]\n      const desc = dirs[i] === false || dirs[i] === 'desc'\n      const sortInt = sortFn(rowA, rowB)\n      if (sortInt !== 0) {\n        return desc ? -sortInt : sortInt\n      }\n    }\n    return dirs[0] ? rowA.index - rowB.index : rowB.index - rowA.index\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  actions,\n  ensurePluginOrder,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { expandRows } from '../utils'\n\nconst pluginName = 'usePagination'\n\n// Actions\nactions.resetPage = 'resetPage'\nactions.gotoPage = 'gotoPage'\nactions.setPageSize = 'setPageSize'\n\nexport const usePagination = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nusePagination.pluginName = pluginName\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pageSize: 10,\n      pageIndex: 0,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPage) {\n    return {\n      ...state,\n      pageIndex: instance.initialState.pageIndex || 0,\n    }\n  }\n\n  if (action.type === actions.gotoPage) {\n    const { pageCount, page } = instance\n    const newPageIndex = functionalUpdate(action.pageIndex, state.pageIndex)\n    let canNavigate = false\n\n    if (newPageIndex > state.pageIndex) {\n      // next page\n      canNavigate =\n        pageCount === -1\n          ? page.length >= state.pageSize\n          : newPageIndex < pageCount\n    } else if (newPageIndex < state.pageIndex) {\n      // prev page\n      canNavigate = newPageIndex > -1\n    }\n\n    if (!canNavigate) {\n      return state\n    }\n\n    return {\n      ...state,\n      pageIndex: newPageIndex,\n    }\n  }\n\n  if (action.type === actions.setPageSize) {\n    const { pageSize } = action\n    const topRowIndex = state.pageSize * state.pageIndex\n    const pageIndex = Math.floor(topRowIndex / pageSize)\n\n    return {\n      ...state,\n      pageIndex,\n      pageSize,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    rows,\n    autoResetPage = true,\n    manualExpandedKey = 'expanded',\n    plugins,\n    pageCount: userPageCount,\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    state: {\n      pageSize,\n      pageIndex,\n      expanded,\n      globalFilter,\n      filters,\n      groupBy,\n      sortBy,\n    },\n    dispatch,\n    data,\n    manualPagination,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useGlobalFilter', 'useFilters', 'useGroupBy', 'useSortBy', 'useExpanded'],\n    'usePagination'\n  )\n\n  const getAutoResetPage = useGetLatest(autoResetPage)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPage()) {\n      dispatch({ type: actions.resetPage })\n    }\n  }, [\n    dispatch,\n    manualPagination ? null : data,\n    globalFilter,\n    filters,\n    groupBy,\n    sortBy,\n  ])\n\n  const pageCount = manualPagination\n    ? userPageCount\n    : Math.ceil(rows.length / pageSize)\n\n  const pageOptions = React.useMemo(\n    () =>\n      pageCount > 0\n        ? [...new Array(pageCount)].fill(null).map((d, i) => i)\n        : [],\n    [pageCount]\n  )\n\n  const page = React.useMemo(() => {\n    let page\n\n    if (manualPagination) {\n      page = rows\n    } else {\n      const pageStart = pageSize * pageIndex\n      const pageEnd = pageStart + pageSize\n\n      page = rows.slice(pageStart, pageEnd)\n    }\n\n    if (paginateExpandedRows) {\n      return page\n    }\n\n    return expandRows(page, { manualExpandedKey, expanded, expandSubRows })\n  }, [\n    expandSubRows,\n    expanded,\n    manualExpandedKey,\n    manualPagination,\n    pageIndex,\n    pageSize,\n    paginateExpandedRows,\n    rows,\n  ])\n\n  const canPreviousPage = pageIndex > 0\n  const canNextPage =\n    pageCount === -1 ? page.length >= pageSize : pageIndex < pageCount - 1\n\n  const gotoPage = React.useCallback(\n    pageIndex => {\n      dispatch({ type: actions.gotoPage, pageIndex })\n    },\n    [dispatch]\n  )\n\n  const previousPage = React.useCallback(() => {\n    return gotoPage(old => old - 1)\n  }, [gotoPage])\n\n  const nextPage = React.useCallback(() => {\n    return gotoPage(old => old + 1)\n  }, [gotoPage])\n\n  const setPageSize = React.useCallback(\n    pageSize => {\n      dispatch({ type: actions.setPageSize, pageSize })\n    },\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    pageOptions,\n    pageCount,\n    page,\n    canPreviousPage,\n    canNextPage,\n    gotoPage,\n    previousPage,\n    nextPage,\n    setPageSize,\n  })\n}\n","/* istanbul ignore file */\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { flattenColumns, getFirstDefined } from '../utils'\n\n// Actions\nactions.resetPivot = 'resetPivot'\nactions.togglePivot = 'togglePivot'\n\nexport const _UNSTABLE_usePivotColumns = hooks => {\n  hooks.getPivotToggleProps = [defaultGetPivotToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceAfterData.push(useInstanceAfterData)\n  hooks.allColumns.push(allColumns)\n  hooks.accessValue.push(accessValue)\n  hooks.materializedColumns.push(materializedColumns)\n  hooks.materializedColumnsDeps.push(materializedColumnsDeps)\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.visibleColumnsDeps.push(visibleColumnsDeps)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\n_UNSTABLE_usePivotColumns.pluginName = 'usePivotColumns'\n\nconst defaultPivotColumns = []\n\nconst defaultGetPivotToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canPivot\n      ? e => {\n          e.persist()\n          header.togglePivot()\n        }\n      : undefined,\n    style: {\n      cursor: header.canPivot ? 'pointer' : undefined,\n    },\n    title: 'Toggle Pivot',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pivotColumns: defaultPivotColumns,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPivot) {\n    return {\n      ...state,\n      pivotColumns: instance.initialState.pivotColumns || defaultPivotColumns,\n    }\n  }\n\n  if (action.type === actions.togglePivot) {\n    const { columnId, value: setPivot } = action\n\n    const resolvedPivot =\n      typeof setPivot !== 'undefined'\n        ? setPivot\n        : !state.pivotColumns.includes(columnId)\n\n    if (resolvedPivot) {\n      return {\n        ...state,\n        pivotColumns: [...state.pivotColumns, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      pivotColumns: state.pivotColumns.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction useInstanceAfterData(instance) {\n  instance.allColumns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n  })\n}\n\nfunction allColumns(columns, { instance }) {\n  columns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n    column.uniqueValues = new Set()\n  })\n  return columns\n}\n\nfunction accessValue(value, { column }) {\n  if (column.uniqueValues && typeof value !== 'undefined') {\n    column.uniqueValues.add(value)\n  }\n  return value\n}\n\nfunction materializedColumns(materialized, { instance }) {\n  const { allColumns, state } = instance\n\n  if (!state.pivotColumns.length || !state.groupBy || !state.groupBy.length) {\n    return materialized\n  }\n\n  const pivotColumns = state.pivotColumns\n    .map(id => allColumns.find(d => d.id === id))\n    .filter(Boolean)\n\n  const sourceColumns = allColumns.filter(\n    d =>\n      !d.isPivotSource &&\n      !state.groupBy.includes(d.id) &&\n      !state.pivotColumns.includes(d.id)\n  )\n\n  const buildPivotColumns = (depth = 0, parent, pivotFilters = []) => {\n    const pivotColumn = pivotColumns[depth]\n\n    if (!pivotColumn) {\n      return sourceColumns.map(sourceColumn => {\n        // TODO: We could offer support here for renesting pivoted\n        // columns inside copies of their header groups. For now,\n        // that seems like it would be (1) overkill on nesting, considering\n        // you already get nesting for every pivot level and (2)\n        // really hard. :)\n\n        return {\n          ...sourceColumn,\n          canPivot: false,\n          isPivoted: true,\n          parent,\n          depth: depth,\n          id: `${parent ? `${parent.id}.${sourceColumn.id}` : sourceColumn.id}`,\n          accessor: (originalRow, i, row) => {\n            if (pivotFilters.every(filter => filter(row))) {\n              return row.values[sourceColumn.id]\n            }\n          },\n        }\n      })\n    }\n\n    const uniqueValues = Array.from(pivotColumn.uniqueValues).sort()\n\n    return uniqueValues.map(uniqueValue => {\n      const columnGroup = {\n        ...pivotColumn,\n        Header:\n          pivotColumn.PivotHeader || typeof pivotColumn.header === 'string'\n            ? `${pivotColumn.Header}: ${uniqueValue}`\n            : uniqueValue,\n        isPivotGroup: true,\n        parent,\n        depth,\n        id: parent\n          ? `${parent.id}.${pivotColumn.id}.${uniqueValue}`\n          : `${pivotColumn.id}.${uniqueValue}`,\n        pivotValue: uniqueValue,\n      }\n\n      columnGroup.columns = buildPivotColumns(depth + 1, columnGroup, [\n        ...pivotFilters,\n        row => row.values[pivotColumn.id] === uniqueValue,\n      ])\n\n      return columnGroup\n    })\n  }\n\n  const newMaterialized = flattenColumns(buildPivotColumns())\n\n  return [...materialized, ...newMaterialized]\n}\n\nfunction materializedColumnsDeps(\n  deps,\n  {\n    instance: {\n      state: { pivotColumns, groupBy },\n    },\n  }\n) {\n  return [...deps, pivotColumns, groupBy]\n}\n\nfunction visibleColumns(visibleColumns, { instance: { state } }) {\n  visibleColumns = visibleColumns.filter(d => !d.isPivotSource)\n\n  if (state.pivotColumns.length && state.groupBy && state.groupBy.length) {\n    visibleColumns = visibleColumns.filter(\n      column => column.isGrouped || column.isPivoted\n    )\n  }\n\n  return visibleColumns\n}\n\nfunction visibleColumnsDeps(deps, { instance }) {\n  return [...deps, instance.state.pivotColumns, instance.state.groupBy]\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    allColumns,\n    flatHeaders,\n    // pivotFn = defaultPivotFn,\n    // manualPivot,\n    getHooks,\n    plugins,\n    dispatch,\n    autoResetPivot = true,\n    manaulPivot,\n    disablePivot,\n    defaultCanPivot,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useGroupBy'], 'usePivotColumns')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultPivot: defaultColumnPivot,\n      disablePivot: columnDisablePivot,\n    } = column\n\n    column.canPivot = accessor\n      ? getFirstDefined(\n          column.canPivot,\n          columnDisablePivot === true ? false : undefined,\n          disablePivot === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canPivot,\n          defaultColumnPivot,\n          defaultCanPivot,\n          false\n        )\n\n    if (column.canPivot) {\n      column.togglePivot = () => instance.togglePivot(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const togglePivot = (columnId, value) => {\n    dispatch({ type: actions.togglePivot, columnId, value })\n  }\n\n  flatHeaders.forEach(header => {\n    header.getPivotToggleProps = makePropGetter(\n      getHooks().getPivotToggleProps,\n      {\n        instance: getInstance(),\n        header,\n      }\n    )\n  })\n\n  const getAutoResetPivot = useGetLatest(autoResetPivot)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPivot()) {\n      dispatch({ type: actions.resetPivot })\n    }\n  }, [dispatch, manaulPivot ? null : columns])\n\n  Object.assign(instance, {\n    togglePivot,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the pivotColumns and the pivot cell for the row\n    cell.isPivoted = cell.column.isPivoted\n  })\n}\n","import React from 'react'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nconst pluginName = 'useRowSelect'\n\n// Actions\nactions.resetSelectedRows = 'resetSelectedRows'\nactions.toggleAllRowsSelected = 'toggleAllRowsSelected'\nactions.toggleRowSelected = 'toggleRowSelected'\nactions.toggleAllPageRowsSelected = 'toggleAllPageRowsSelected'\n\nexport const useRowSelect = hooks => {\n  hooks.getToggleRowSelectedProps = [defaultGetToggleRowSelectedProps]\n  hooks.getToggleAllRowsSelectedProps = [defaultGetToggleAllRowsSelectedProps]\n  hooks.getToggleAllPageRowsSelectedProps = [\n    defaultGetToggleAllPageRowsSelectedProps,\n  ]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowSelect.pluginName = pluginName\n\nconst defaultGetToggleRowSelectedProps = (props, { instance, row }) => {\n  const { manualRowSelectedKey = 'isSelected' } = instance\n  let checked = false\n\n  if (row.original && row.original[manualRowSelectedKey]) {\n    checked = true\n  } else {\n    checked = row.isSelected\n  }\n\n  return [\n    props,\n    {\n      onChange: e => {\n        row.toggleRowSelected(e.target.checked)\n      },\n      style: {\n        cursor: 'pointer',\n      },\n      checked,\n      title: 'Toggle Row Selected',\n      indeterminate: row.isSomeSelected,\n    },\n  ]\n}\n\nconst defaultGetToggleAllRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleAllRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllRowsSelected,\n    title: 'Toggle All Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllRowsSelected &&\n        Object.keys(instance.state.selectedRowIds).length\n    ),\n  },\n]\n\nconst defaultGetToggleAllPageRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange(e) {\n      instance.toggleAllPageRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllPageRowsSelected,\n    title: 'Toggle All Current Page Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllPageRowsSelected &&\n        instance.page.some(({ id }) => instance.state.selectedRowIds[id])\n    ),\n  },\n]\n\n// eslint-disable-next-line max-params\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      selectedRowIds: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSelectedRows) {\n    return {\n      ...state,\n      selectedRowIds: instance.initialState.selectedRowIds || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      isAllRowsSelected,\n      rowsById,\n      nonGroupedRowsById = rowsById,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllRowsSelected\n\n    // Only remove/add the rows that are visible on the screen\n    //  Leave all the other rows that are selected alone.\n    const selectedRowIds = Object.assign({}, state.selectedRowIds)\n\n    if (selectAll) {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        selectedRowIds[rowId] = true\n      })\n    } else {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        delete selectedRowIds[rowId]\n      })\n    }\n\n    return {\n      ...state,\n      selectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleRowSelected) {\n    const { id, value: setSelected } = action\n    const { rowsById, selectSubRows = true, getSubRows } = instance\n    const isSelected = state.selectedRowIds[id]\n    const shouldExist =\n      typeof setSelected !== 'undefined' ? setSelected : !isSelected\n\n    if (isSelected === shouldExist) {\n      return state\n    }\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (shouldExist) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && getSubRows(row)) {\n        return getSubRows(row).forEach(row => handleRowById(row.id))\n      }\n    }\n\n    handleRowById(id)\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleAllPageRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      page,\n      rowsById,\n      selectSubRows = true,\n      isAllPageRowsSelected,\n      getSubRows,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllPageRowsSelected\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (selectAll) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && getSubRows(row)) {\n        return getSubRows(row).forEach(row => handleRowById(row.id))\n      }\n    }\n\n    page.forEach(row => handleRowById(row.id))\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n  return state\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    getHooks,\n    plugins,\n    rowsById,\n    nonGroupedRowsById = rowsById,\n    autoResetSelectedRows = true,\n    state: { selectedRowIds },\n    selectSubRows = true,\n    dispatch,\n    page,\n    getSubRows,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGroupBy', 'useSortBy', 'useExpanded', 'usePagination'],\n    'useRowSelect'\n  )\n\n  const selectedFlatRows = React.useMemo(() => {\n    const selectedFlatRows = []\n\n    rows.forEach(row => {\n      const isSelected = selectSubRows\n        ? getRowIsSelected(row, selectedRowIds, getSubRows)\n        : !!selectedRowIds[row.id]\n      row.isSelected = !!isSelected\n      row.isSomeSelected = isSelected === null\n\n      if (isSelected) {\n        selectedFlatRows.push(row)\n      }\n    })\n\n    return selectedFlatRows\n  }, [rows, selectSubRows, selectedRowIds, getSubRows])\n\n  let isAllRowsSelected = Boolean(\n    Object.keys(nonGroupedRowsById).length && Object.keys(selectedRowIds).length\n  )\n\n  let isAllPageRowsSelected = isAllRowsSelected\n\n  if (isAllRowsSelected) {\n    if (Object.keys(nonGroupedRowsById).some(id => !selectedRowIds[id])) {\n      isAllRowsSelected = false\n    }\n  }\n\n  if (!isAllRowsSelected) {\n    if (page && page.length && page.some(({ id }) => !selectedRowIds[id])) {\n      isAllPageRowsSelected = false\n    }\n  }\n\n  const getAutoResetSelectedRows = useGetLatest(autoResetSelectedRows)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSelectedRows()) {\n      dispatch({ type: actions.resetSelectedRows })\n    }\n  }, [dispatch, data])\n\n  const toggleAllRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleAllPageRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllPageRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleRowSelected = React.useCallback(\n    (id, value) => dispatch({ type: actions.toggleRowSelected, id, value }),\n    [dispatch]\n  )\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  const getToggleAllPageRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllPageRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    selectedFlatRows,\n    isAllRowsSelected,\n    isAllPageRowsSelected,\n    toggleRowSelected,\n    toggleAllRowsSelected,\n    getToggleAllRowsSelectedProps,\n    getToggleAllPageRowsSelectedProps,\n    toggleAllPageRowsSelected,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  row.toggleRowSelected = set => instance.toggleRowSelected(row.id, set)\n\n  row.getToggleRowSelectedProps = makePropGetter(\n    instance.getHooks().getToggleRowSelectedProps,\n    { instance: instance, row }\n  )\n}\n\nfunction getRowIsSelected(row, selectedRowIds, getSubRows) {\n  if (selectedRowIds[row.id]) {\n    return true\n  }\n\n  const subRows = getSubRows(row)\n\n  if (subRows && subRows.length) {\n    let allChildrenSelected = true\n    let someSelected = false\n\n    subRows.forEach(subRow => {\n      // Bail out early if we know both of these\n      if (someSelected && !allChildrenSelected) {\n        return\n      }\n\n      if (getRowIsSelected(subRow, selectedRowIds, getSubRows)) {\n        someSelected = true\n      } else {\n        allChildrenSelected = false\n      }\n    })\n    return allChildrenSelected ? true : someSelected ? null : false\n  }\n\n  return false\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst defaultInitialRowStateAccessor = row => ({})\nconst defaultInitialCellStateAccessor = cell => ({})\n\n// Actions\nactions.setRowState = 'setRowState'\nactions.setCellState = 'setCellState'\nactions.resetRowState = 'resetRowState'\n\nexport const useRowState = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowState.pluginName = 'useRowState'\n\nfunction reducer(state, action, previousState, instance) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    rowsById,\n  } = instance\n\n  if (action.type === actions.init) {\n    return {\n      rowState: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetRowState) {\n    return {\n      ...state,\n      rowState: instance.initialState.rowState || {},\n    }\n  }\n\n  if (action.type === actions.setRowState) {\n    const { rowId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: functionalUpdate(value, oldRowState),\n      },\n    }\n  }\n\n  if (action.type === actions.setCellState) {\n    const { rowId, columnId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    const oldCellState =\n      typeof oldRowState?.cellState?.[columnId] !== 'undefined'\n        ? oldRowState.cellState[columnId]\n        : initialCellStateAccessor(\n            rowsById[rowId]?.cells?.find(cell => cell.column.id === columnId)\n          )\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: {\n          ...oldRowState,\n          cellState: {\n            ...(oldRowState.cellState || {}),\n            [columnId]: functionalUpdate(value, oldCellState),\n          },\n        },\n      },\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const { autoResetRowState = true, data, dispatch } = instance\n\n  const setRowState = React.useCallback(\n    (rowId, value) =>\n      dispatch({\n        type: actions.setRowState,\n        rowId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const setCellState = React.useCallback(\n    (rowId, columnId, value) =>\n      dispatch({\n        type: actions.setCellState,\n        rowId,\n        columnId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const getAutoResetRowState = useGetLatest(autoResetRowState)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetRowState()) {\n      dispatch({ type: actions.resetRowState })\n    }\n  }, [data])\n\n  Object.assign(instance, {\n    setRowState,\n    setCellState,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    state: { rowState },\n  } = instance\n\n  if (row) {\n    row.state =\n      typeof rowState[row.id] !== 'undefined'\n        ? rowState[row.id]\n        : initialRowStateAccessor(row)\n\n    row.setState = updater => {\n      return instance.setRowState(row.id, updater)\n    }\n\n    row.cells.forEach(cell => {\n      if (!row.state.cellState) {\n        row.state.cellState = {}\n      }\n\n      cell.state =\n        typeof row.state.cellState[cell.column.id] !== 'undefined'\n          ? row.state.cellState[cell.column.id]\n          : initialCellStateAccessor(cell)\n\n      cell.setState = updater => {\n        return instance.setCellState(row.id, cell.column.id, updater)\n      }\n    })\n  }\n}\n","import React from 'react'\n\nimport { functionalUpdate, actions } from '../publicUtils'\n\n// Actions\nactions.resetColumnOrder = 'resetColumnOrder'\nactions.setColumnOrder = 'setColumnOrder'\n\nexport const useColumnOrder = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => {\n    return [...deps, instance.state.columnOrder]\n  })\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnOrder.pluginName = 'useColumnOrder'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      columnOrder: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetColumnOrder) {\n    return {\n      ...state,\n      columnOrder: instance.initialState.columnOrder || [],\n    }\n  }\n\n  if (action.type === actions.setColumnOrder) {\n    return {\n      ...state,\n      columnOrder: functionalUpdate(action.columnOrder, state.columnOrder),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { columnOrder },\n    },\n  }\n) {\n  // If there is no order, return the normal columns\n  if (!columnOrder || !columnOrder.length) {\n    return columns\n  }\n\n  const columnOrderCopy = [...columnOrder]\n\n  // If there is an order, make a copy of the columns\n  const columnsCopy = [...columns]\n\n  // And make a new ordered array of the columns\n  const columnsInOrder = []\n\n  // Loop over the columns and place them in order into the new array\n  while (columnsCopy.length && columnOrderCopy.length) {\n    const targetColumnId = columnOrderCopy.shift()\n    const foundIndex = columnsCopy.findIndex(d => d.id === targetColumnId)\n    if (foundIndex > -1) {\n      columnsInOrder.push(columnsCopy.splice(foundIndex, 1)[0])\n    }\n  }\n\n  // If there are any columns left, add them to the end\n  return [...columnsInOrder, ...columnsCopy]\n}\n\nfunction useInstance(instance) {\n  const { dispatch } = instance\n\n  instance.setColumnOrder = React.useCallback(\n    columnOrder => {\n      return dispatch({ type: actions.setColumnOrder, columnOrder })\n    },\n    [dispatch]\n  )\n}\n","import React from 'react'\n\nimport {\n  actions,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, passiveEventSupported } from '../utils'\n\n// Default Column\ndefaultColumn.canResize = true\n\n// Actions\nactions.columnStartResizing = 'columnStartResizing'\nactions.columnResizing = 'columnResizing'\nactions.columnDoneResizing = 'columnDoneResizing'\nactions.resetResize = 'resetResize'\n\nexport const useResizeColumns = hooks => {\n  hooks.getResizerProps = [defaultGetResizerProps]\n  hooks.getHeaderProps.push({\n    style: {\n      position: 'relative',\n    },\n  })\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n}\n\nconst defaultGetResizerProps = (props, { instance, header }) => {\n  const { dispatch } = instance\n\n  const onResizeStart = (e, header) => {\n    let isTouchEvent = false\n    if (e.type === 'touchstart') {\n      // lets not respond to multiple touches (e.g. 2 or 3 fingers)\n      if (e.touches && e.touches.length > 1) {\n        return\n      }\n      isTouchEvent = true\n    }\n    const headersToResize = getLeafHeaders(header)\n    const headerIdWidths = headersToResize.map(d => [d.id, d.totalWidth])\n\n    const clientX = isTouchEvent ? Math.round(e.touches[0].clientX) : e.clientX\n\n    const dispatchMove = clientXPos => {\n      dispatch({ type: actions.columnResizing, clientX: clientXPos })\n    }\n    const dispatchEnd = () => dispatch({ type: actions.columnDoneResizing })\n\n    const handlersAndEvents = {\n      mouse: {\n        moveEvent: 'mousemove',\n        moveHandler: e => dispatchMove(e.clientX),\n        upEvent: 'mouseup',\n        upHandler: e => {\n          document.removeEventListener(\n            'mousemove',\n            handlersAndEvents.mouse.moveHandler\n          )\n          document.removeEventListener(\n            'mouseup',\n            handlersAndEvents.mouse.upHandler\n          )\n          dispatchEnd()\n        },\n      },\n      touch: {\n        moveEvent: 'touchmove',\n        moveHandler: e => {\n          if (e.cancelable) {\n            e.preventDefault()\n            e.stopPropagation()\n          }\n          dispatchMove(e.touches[0].clientX)\n          return false\n        },\n        upEvent: 'touchend',\n        upHandler: e => {\n          document.removeEventListener(\n            handlersAndEvents.touch.moveEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          document.removeEventListener(\n            handlersAndEvents.touch.upEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          dispatchEnd()\n        },\n      },\n    }\n\n    const events = isTouchEvent\n      ? handlersAndEvents.touch\n      : handlersAndEvents.mouse\n    const passiveIfSupported = passiveEventSupported()\n      ? { passive: false }\n      : false\n    document.addEventListener(\n      events.moveEvent,\n      events.moveHandler,\n      passiveIfSupported\n    )\n    document.addEventListener(\n      events.upEvent,\n      events.upHandler,\n      passiveIfSupported\n    )\n\n    dispatch({\n      type: actions.columnStartResizing,\n      columnId: header.id,\n      columnWidth: header.totalWidth,\n      headerIdWidths,\n      clientX,\n    })\n  }\n\n  return [\n    props,\n    {\n      onMouseDown: e => e.persist() || onResizeStart(e, header),\n      onTouchStart: e => e.persist() || onResizeStart(e, header),\n      style: {\n        cursor: 'col-resize',\n      },\n      draggable: false,\n      role: 'separator',\n    },\n  ]\n}\n\nuseResizeColumns.pluginName = 'useResizeColumns'\n\nfunction reducer(state, action) {\n  if (action.type === actions.init) {\n    return {\n      columnResizing: {\n        columnWidths: {},\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetResize) {\n    return {\n      ...state,\n      columnResizing: {\n        columnWidths: {},\n      },\n    }\n  }\n\n  if (action.type === actions.columnStartResizing) {\n    const { clientX, columnId, columnWidth, headerIdWidths } = action\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: clientX,\n        headerIdWidths,\n        columnWidth,\n        isResizingColumn: columnId,\n      },\n    }\n  }\n\n  if (action.type === actions.columnResizing) {\n    const { clientX } = action\n    const { startX, columnWidth, headerIdWidths = [] } = state.columnResizing\n\n    const deltaX = clientX - startX\n    const percentageDeltaX = deltaX / columnWidth\n\n    const newColumnWidths = {}\n\n    headerIdWidths.forEach(([headerId, headerWidth]) => {\n      newColumnWidths[headerId] = Math.max(\n        headerWidth + headerWidth * percentageDeltaX,\n        0\n      )\n    })\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        columnWidths: {\n          ...state.columnResizing.columnWidths,\n          ...newColumnWidths,\n        },\n      },\n    }\n  }\n\n  if (action.type === actions.columnDoneResizing) {\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: null,\n        isResizingColumn: null,\n      },\n    }\n  }\n}\n\nconst useInstanceBeforeDimensions = instance => {\n  const {\n    flatHeaders,\n    disableResizing,\n    getHooks,\n    state: { columnResizing },\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  flatHeaders.forEach(header => {\n    const canResize = getFirstDefined(\n      header.disableResizing === true ? false : undefined,\n      disableResizing === true ? false : undefined,\n      true\n    )\n\n    header.canResize = canResize\n    header.width =\n      columnResizing.columnWidths[header.id] ||\n      header.originalWidth ||\n      header.width\n    header.isResizing = columnResizing.isResizingColumn === header.id\n\n    if (canResize) {\n      header.getResizerProps = makePropGetter(getHooks().getResizerProps, {\n        instance: getInstance(),\n        header,\n      })\n    }\n  })\n}\n\nfunction useInstance(instance) {\n  const { plugins, dispatch, autoResetResize = true, columns } = instance\n\n  ensurePluginOrder(plugins, ['useAbsoluteLayout'], 'useResizeColumns')\n\n  const getAutoResetResize = useGetLatest(autoResetResize)\n  useMountedLayoutEffect(() => {\n    if (getAutoResetResize()) {\n      dispatch({ type: actions.resetResize })\n    }\n  }, [columns])\n\n  const resetResizing = React.useCallback(\n    () => dispatch({ type: actions.resetResize }),\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    resetResizing,\n  })\n}\n\nfunction getLeafHeaders(header) {\n  const leafHeaders = []\n  const recurseHeader = header => {\n    if (header.columns && header.columns.length) {\n      header.columns.map(recurseHeader)\n    }\n    leafHeaders.push(header)\n  }\n  recurseHeader(header)\n  return leafHeaders\n}\n","const cellStyles = {\n  position: 'absolute',\n  top: 0,\n}\n\nexport const useAbsoluteLayout = hooks => {\n  hooks.getTableBodyProps.push(getRowStyles)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${cell.column.totalLeft}px`,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseAbsoluteLayout.pluginName = 'useAbsoluteLayout'\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      position: 'relative',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n","const cellStyles = {\n  display: 'inline-block',\n  boxSizing: 'border-box',\n}\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n\nexport const useBlockLayout = hooks => {\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseBlockLayout.pluginName = 'useBlockLayout'\n","export function useFlexLayout(hooks) {\n  hooks.getTableProps.push(getTableProps)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n  hooks.getHeaderProps.push(getHeaderProps)\n  hooks.getCellProps.push(getCellProps)\n  hooks.getFooterProps.push(getFooterProps)\n}\n\nuseFlexLayout.pluginName = 'useFlexLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      flex: '1 0 auto',\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n\nconst getCellProps = (props, { cell }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: `${cell.column.totalFlexWidth} 0 auto`,\n      minWidth: `${cell.column.totalMinWidth}px`,\n      width: `${cell.column.totalWidth}px`,\n    },\n  },\n]\n\nconst getFooterProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n","export function useGridLayout(hooks) {\n  hooks.stateReducers.push(reducer)\n  hooks.getTableProps.push(getTableProps)\n  hooks.getHeaderProps.push(getHeaderProps)\n}\n\nuseGridLayout.pluginName = 'useGridLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: `grid`,\n      gridTemplateColumns: instance.state.gridLayout.columnWidths.map(w => w).join(` `),\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    id: `header-cell-${column.id}`,\n    style: {\n      position: `sticky` //enables a scroll wrapper to be placed around the table and have sticky headers\n    },\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === `init`) {\n    return {\n      gridLayout: {\n        columnWidths: instance.columns.map(() => `auto`),\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === `columnStartResizing`) {\n    const { columnId } = action\n    const columnIndex = instance.visibleColumns.findIndex(col => col.id === columnId)\n    const elWidth = getElementWidth(columnId)\n\n    if (elWidth !== undefined) {\n      return {\n        ...state,\n        gridLayout: {\n          ...state.gridLayout,\n          columnId,\n          columnIndex,\n          startingWidth: elWidth\n        },\n      }\n    } else {\n      return state\n    }\n  }\n\n  if (action.type === `columnResizing`) {\n    const {\n      columnIndex,\n      startingWidth,\n      columnWidths,\n    } = state.gridLayout\n\n    const change = state.columnResizing.startX - action.clientX\n    const newWidth = startingWidth - change\n    const columnWidthsCopy = [...columnWidths]\n    columnWidthsCopy[columnIndex] = `${newWidth}px`\n\n    return {\n      ...state,\n      gridLayout: {\n        ...state.gridLayout,\n        columnWidths: columnWidthsCopy,\n      },\n    }\n  }\n}\n\nfunction getElementWidth(columnId) {\n  const width = document.getElementById(`header-cell-${columnId}`)?.offsetWidth\n\n  if (width !== undefined) {\n    return width\n  }\n}","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}"],"sourceRoot":""}